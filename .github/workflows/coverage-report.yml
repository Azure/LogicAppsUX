name: Generate Coverage Report

on:
#   push:
#     branches: [coverageReport]
  pull_request:
    branches: [main, dev/*, hotfix/*]
jobs:
  pr-coverage:
    runs-on: ubuntu-latest
    permissions:
        issues: write
        pull-requests: write    
    steps:
        - name: 'Checkout Github Action'
          uses: actions/checkout@master
          with:
            fetch-depth: 0
            
        - name: Cache turbo build setup
          uses: actions/cache@v4
          with:
            path: .turbo
            key: ${{ runner.os }}-turbo-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-turbo-

        - name: Set up Node.js 
          uses: actions/setup-node@v1
          with:
            node-version: 20.x  

        - uses: pnpm/action-setup@v3
          with:
            version: 8
            run_install: |
              - recursive: true
                args: [--frozen-lockfile, --strict-peer-dependencies]   

        - run: pnpm turbo run test:lib --cache-dir=.turbo -- --changed origin/main
        - run: npx cobertura-merge-globby -o coverage.xml --files="**/cobertura-coverage.xml"
        - name: Generate Coverage Report
          uses: clearlyip/code-coverage-report-action@v4
          id: code_coverage_report_action
          with:
            #Location of the generate coverage file
            filename: 'coverage.xml'
            github_token: ${{ secrets.GITHUB_TOKEN }}
            badge: true
            fail_on_negative_difference: true
            artifact_download_workflow_names: 'base-coverage'
        - name: Add Coverage PR Comment
          #Make sure the report was generated and that the event is actually a pull request, run if failed or success
          uses: marocchino/sticky-pull-request-comment@v2
          if: steps.code_coverage_report_action.outputs.file != '' && github.event_name == 'pull_request' && (success() || failure())
          with:
            recreate: true
            path: code-coverage-results.md