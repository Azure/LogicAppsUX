name: Generate Coverage Report

on:
#   push:
#     branches: [coverageReport]
  pull_request:
    branches: [main, dev/*, hotfix/*]
jobs:
  base-coverage:
    runs-on: ubuntu-latest

    steps:
      # checkout the repo
      - name: 'Checkout Github Action'
        uses: actions/checkout@master
        with:
            ref: main

      - name: Set up Node.js 
        uses: actions/setup-node@v1
        with:
          node-version: 20.x

      - uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --strict-peer-dependencies]
            
      - run: turbo run test:lib
      - run: npx cobertura-merge-globby -o coverage.xml --files="**/cobertura-coverage.xml"
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-main
          path: coverage.xml
          retention-days: 1
  pr-coverage:
    runs-on: ubuntu-latest
    needs: base-coverage
    permissions:
        issues: write
        pull-requests: write    
    steps:
        - name: 'Checkout Github Action'
          uses: actions/checkout@master

        - name: Cache turbo build setup
          uses: actions/cache@v4
          with:
            path: .turbo
            key: ${{ runner.os }}-turbo-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-turbo-

        - name: Set up Node.js 
          uses: actions/setup-node@v1
          with:
            node-version: 20.x  

        - uses: pnpm/action-setup@v3
          with:
            version: 8
            run_install: |
              - recursive: true
                args: [--frozen-lockfile, --strict-peer-dependencies]   

        - run: pnpm turbo run test:lib --cache-dir=.turbo 
        - run: npx cobertura-merge-globby -o coverage.xml --files="**/cobertura-coverage.xml"
        - name: Generate Coverage Report
          uses: clearlyip/code-coverage-report-action@v4
          id: code_coverage_report_action
          with:
            #Location of the generate coverage file
            filename: 'coverage.xml'
            github_token: ${{ secrets.GITHUB_TOKEN }}
            badge: true
        - name: Add Coverage PR Comment
          #Make sure the report was generated and that the event is actually a pull request, run if failed or success
          uses: marocchino/sticky-pull-request-comment@v2
          if: steps.code_coverage_report_action.outputs.file != '' && github.event_name == 'pull_request' && (success() || failure())
          with:
            recreate: true
            path: code-coverage-results.md