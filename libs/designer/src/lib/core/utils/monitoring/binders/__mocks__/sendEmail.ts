export default {
  inputsParametersByName: {
    'body.$.To': {
      description: 'Specify email addresses separated by semicolons like someone@contoso.com',
      dynamicValues: {
        type: 'LegacyDynamicValues',
        extension: {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      editor: 'combobox',
      editorOptions: {
        options: [],
      },
      format: 'email',
      isNested: true,
      key: 'body.$.To',
      name: 'To',
      required: true,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'To',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      summary: 'To',
      suppressCasting: false,
      title: 'To',
      type: 'string',
      visibility: '',
      in: 'body',
      hideInUI: false,
      value: 'user@contoso.com',
    },
    'body.$.Subject': {
      description: 'Specify the subject of the mail',
      isNested: true,
      key: 'body.$.Subject',
      name: 'Subject',
      required: true,
      schema: {
        description: 'Specify the subject of the mail',
        type: 'string',
        'x-ms-summary': 'Subject',
      },
      summary: 'Subject',
      suppressCasting: false,
      title: 'Subject',
      type: 'string',
      visibility: '',
      in: 'body',
      hideInUI: false,
      value: 'Buenos dias',
    },
    'body.$.Body': {
      description: 'Specify the body of the mail',
      format: 'html',
      isNested: true,
      key: 'body.$.Body',
      name: 'Body',
      required: true,
      schema: {
        format: 'html',
        description: 'Specify the body of the mail',
        type: 'string',
        'x-ms-summary': 'Body',
      },
      summary: 'Body',
      suppressCasting: false,
      title: 'Body',
      type: 'string',
      visibility: '',
      in: 'body',
      hideInUI: false,
      value: '<p class="editor-paragraph">HOla manis</p>',
    },
    'body.$.From': {
      description:
        'Email address to send mail from (requires "Send as" or "Send on behalf of" permission for that mailbox). For more info on granting permissions please refer https://docs.microsoft.com/office365/admin/manage/send-email-as-distribution-list',
      format: 'email',
      isNested: true,
      key: 'body.$.From',
      name: 'From',
      required: false,
      schema: {
        format: 'email',
        description:
          'Email address to send mail from (requires "Send as" or "Send on behalf of" permission for that mailbox). For more info on granting permissions please refer https://docs.microsoft.com/office365/admin/manage/send-email-as-distribution-list',
        type: 'string',
        'x-ms-summary': 'From (Send as)',
        'x-ms-visibility': 'advanced',
      },
      summary: 'From (Send as)',
      suppressCasting: false,
      title: 'From (Send as)',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.Cc': {
      description: 'Specify email addresses separated by semicolons like someone@contoso.com',
      dynamicValues: {
        type: 'LegacyDynamicValues',
        extension: {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      editor: 'combobox',
      editorOptions: {
        options: [],
      },
      format: 'email',
      isNested: true,
      key: 'body.$.Cc',
      name: 'Cc',
      required: false,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'CC',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      summary: 'CC',
      suppressCasting: false,
      title: 'CC',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.Bcc': {
      description: 'Specify email addresses separated by semicolons like someone@contoso.com',
      dynamicValues: {
        type: 'LegacyDynamicValues',
        extension: {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      editor: 'combobox',
      editorOptions: {
        options: [],
      },
      format: 'email',
      isNested: true,
      key: 'body.$.Bcc',
      name: 'Bcc',
      required: false,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'BCC',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      summary: 'BCC',
      suppressCasting: false,
      title: 'BCC',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.Attachments': {
      description: 'Attachments',
      isNested: true,
      itemSchema: {
        description: 'Attachment',
        required: ['Name', 'ContentBytes'],
        type: 'object',
        properties: {
          Name: {
            description: 'Attachment name',
            type: 'string',
            'x-ms-summary': 'Name',
          },
          ContentBytes: {
            format: 'byte',
            description: 'Attachment content',
            type: 'string',
            'x-ms-summary': 'Content',
          },
        },
      },
      key: 'body.$.Attachments',
      name: 'Attachments',
      required: false,
      schema: {
        description: 'Attachments',
        type: 'array',
        items: {
          description: 'Attachment',
          required: ['Name', 'ContentBytes'],
          type: 'object',
          properties: {
            Name: {
              description: 'Attachment name',
              type: 'string',
              'x-ms-summary': 'Name',
            },
            ContentBytes: {
              format: 'byte',
              description: 'Attachment content',
              type: 'string',
              'x-ms-summary': 'Content',
            },
          },
        },
        'x-ms-summary': 'Attachments',
        'x-ms-visibility': 'advanced',
      },
      summary: 'Attachments',
      suppressCasting: false,
      title: 'Attachments',
      type: 'array',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.Sensitivity': {
      description: 'Sensitivity',
      dynamicValues: {
        type: 'LegacyDynamicValues',
        extension: {
          operationId: 'GetSensitivityLabels',
          parameters: {},
          'value-path': 'Id',
          'value-title': 'DisplayName',
        },
      },
      editor: 'combobox',
      editorOptions: {
        options: [],
      },
      isNested: true,
      key: 'body.$.Sensitivity',
      name: 'Sensitivity',
      required: false,
      schema: {
        description: 'Sensitivity',
        type: 'string',
        'x-ms-summary': 'Sensitivity',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          operationId: 'GetSensitivityLabels',
          parameters: {},
          'value-path': 'Id',
          'value-title': 'DisplayName',
        },
      },
      summary: 'Sensitivity',
      suppressCasting: false,
      title: 'Sensitivity',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.ReplyTo': {
      description: 'The email addresses to use when replying',
      format: 'email',
      isNested: true,
      key: 'body.$.ReplyTo',
      name: 'ReplyTo',
      required: false,
      schema: {
        format: 'email',
        description: 'The email addresses to use when replying',
        type: 'string',
        'x-ms-summary': 'Reply To',
        'x-ms-visibility': 'advanced',
      },
      summary: 'Reply To',
      suppressCasting: false,
      title: 'Reply To',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
    },
    'body.$.Importance': {
      default: 'Normal',
      description: 'Importance',
      editor: 'combobox',
      editorOptions: {
        options: [
          {
            displayName: 'Low',
            value: 'Low',
            key: 'Low',
          },
          {
            displayName: 'Normal',
            value: 'Normal',
            key: 'Normal',
          },
          {
            displayName: 'High',
            value: 'High',
            key: 'High',
          },
        ],
      },
      enum: [
        {
          displayName: 'Low',
          value: 'Low',
        },
        {
          displayName: 'Normal',
          value: 'Normal',
        },
        {
          displayName: 'High',
          value: 'High',
        },
      ],
      isNested: true,
      key: 'body.$.Importance',
      name: 'Importance',
      required: false,
      schema: {
        description: 'Importance',
        default: 'Normal',
        enum: ['Low', 'Normal', 'High'],
        type: 'string',
        'x-ms-summary': 'Importance',
        'x-ms-visibility': 'advanced',
      },
      summary: 'Importance',
      suppressCasting: false,
      title: 'Importance',
      type: 'string',
      visibility: 'advanced',
      in: 'body',
      hideInUI: false,
      value: 'Normal',
    },
  },
  inputs: {
    method: 'post',
    path: '/v2/Mail',
    host: {
      connection: {
        referenceName: 'office365',
      },
    },
    body: {
      To: 'user@contoso.com',
      Subject: 'Good morning',
      Body: '<p class="editor-paragraph">Hello there</p>',
      Importance: 'Normal',
    },
  },
  operation: {
    operationId: 'SendEmailV2',
    description: 'This operation sends an email message.',
    method: 'post',
    path: '/{connectionId}/v2/Mail',
    summary: 'Send an email (V2)',
    visibility: 'important',
    annotation: {
      status: 'Production',
    },
    externalDocs: {
      url: 'https://docs.microsoft.com/connectors/office365/#send-an-email-(v2)',
      description: 'This operation sends an email message.',
    },
    supportsPaging: false,
    uploadChunkMetadata: {
      chunkTransferSupported: false,
      acceptUploadSize: false,
    },
    downloadChunkMetadata: {
      acceptDownloadSize: false,
    },
  },
  operationMetadata: undefined,
  nodeParameters: {
    'body.$.To': {
      id: '42C85346-B8C6-4848-9CF1-33DE1E90AF45',
      dynamicData: {
        status: 'failed',
        error: {
          message: 'APIM Operation not found',
        },
      },
      editorOptions: {
        options: [],
      },
      info: {
        format: 'email',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      label: 'To',
      parameterKey: 'body.$.To',
      parameterName: 'To',
      placeholder: 'Specify email addresses separated by semicolons like someone@contoso.com',
      preservedValue: 'user@contoso.com',
      required: true,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'To',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: 'DE8C88FE-27F2-4497-A2BA-83CFC6FA36AD',
          type: 'literal',
          value: 'user@contoso.com',
        },
      ],
      visibility: '',
    },
    'body.$.Subject': {
      id: 'F7A30B2A-80F4-4396-A1F7-51733F5979E5',
      info: {
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      label: 'Subject',
      parameterKey: 'body.$.Subject',
      parameterName: 'Subject',
      placeholder: 'Specify the subject of the mail',
      preservedValue: 'Good morning',
      required: true,
      schema: {
        description: 'Specify the subject of the mail',
        type: 'string',
        'x-ms-summary': 'Subject',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: '46505E52-C642-4230-A2E5-7F97D885C390',
          type: 'literal',
          value: 'Good morning',
        },
      ],
      visibility: '',
    },
    'body.$.Body': {
      id: 'EA5E2941-38E2-4522-A415-96BCB2A27ABF',
      editor: 'html',
      info: {
        format: 'html',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      label: 'Body',
      parameterKey: 'body.$.Body',
      parameterName: 'Body',
      placeholder: 'Specify the body of the mail',
      preservedValue: '<p class="editor-paragraph">Hello there</p>',
      required: true,
      schema: {
        format: 'html',
        description: 'Specify the body of the mail',
        type: 'string',
        'x-ms-summary': 'Body',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: '51BBE25D-687C-49F4-82EF-9EBB6D97B0AA',
          type: 'literal',
          value: '<p class="editor-paragraph">Hello there</p>',
        },
      ],
      visibility: '',
    },
    'body.$.From': {
      id: 'ACDCD7BC-B846-419A-ABA6-A8873F761471',
      info: {
        format: 'email',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'From (Send as)',
      parameterKey: 'body.$.From',
      parameterName: 'From',
      placeholder:
        'Email address to send mail from (requires "Send as" or "Send on behalf of" permission for that mailbox). For more info on granting permissions please refer https://docs.microsoft.com/office365/admin/manage/send-email-as-distribution-list',
      required: false,
      schema: {
        format: 'email',
        description:
          'Email address to send mail from (requires "Send as" or "Send on behalf of" permission for that mailbox). For more info on granting permissions please refer https://docs.microsoft.com/office365/admin/manage/send-email-as-distribution-list',
        type: 'string',
        'x-ms-summary': 'From (Send as)',
        'x-ms-visibility': 'advanced',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: 'AD5CBAC9-1BAA-4F8A-8992-ECC876852E03',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.Cc': {
      id: '62FBF70D-A2DD-487F-9E54-C4880222B30E',
      dynamicData: {
        status: 'failed',
        error: {
          message: 'APIM Operation not found',
        },
      },
      editorOptions: {
        options: [],
      },
      info: {
        format: 'email',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'CC',
      parameterKey: 'body.$.Cc',
      parameterName: 'Cc',
      placeholder: 'Specify email addresses separated by semicolons like someone@contoso.com',
      required: false,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'CC',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: '529FB91B-2BD2-493A-960F-7C119F00BA45',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.Bcc': {
      id: '7FB7F5E6-8CBF-4D15-A91B-7953BDE70064',
      dynamicData: {
        status: 'failed',
        error: {
          message: 'APIM Operation not found',
        },
      },
      editorOptions: {
        options: [],
      },
      info: {
        format: 'email',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'BCC',
      parameterKey: 'body.$.Bcc',
      parameterName: 'Bcc',
      placeholder: 'Specify email addresses separated by semicolons like someone@contoso.com',
      required: false,
      schema: {
        format: 'email',
        description: 'Specify email addresses separated by semicolons like someone@contoso.com',
        type: 'string',
        'x-ms-summary': 'BCC',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          builtInOperation: 'AadGraph.GetUsers',
          parameters: {},
          'value-path': 'mail',
        },
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: 'D9E3A2AD-CB82-4414-B4F4-3F51E3D3BFE9',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.Attachments': {
      id: '8D4DD018-5205-4A1A-BF59-545F838C326F',
      editor: 'array',
      editorViewModel: {
        arrayType: 'complex',
        itemSchema: {
          key: '',
          description: 'Attachment',
          required: ['Name', 'ContentBytes'],
          type: 'object',
          properties: {
            key: 'properties',
            Name: {
              key: 'properties.Name',
              description: 'Attachment name',
              type: 'string',
              title: 'Name',
            },
            ContentBytes: {
              key: 'properties.ContentBytes',
              format: 'byte',
              description: 'Attachment content',
              type: 'string',
              title: 'Content',
            },
          },
        },
        uncastedValue: [
          {
            id: '46F55E72-94B9-49DE-814F-62CA65C2BB95',
            type: 'literal',
            value: '',
          },
        ],
      },
      info: {
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'Attachments',
      parameterKey: 'body.$.Attachments',
      parameterName: 'Attachments',
      placeholder: 'Attachments',
      required: false,
      schema: {
        description: 'Attachments',
        type: 'array',
        items: {
          description: 'Attachment',
          required: ['Name', 'ContentBytes'],
          type: 'object',
          properties: {
            Name: {
              description: 'Attachment name',
              type: 'string',
              'x-ms-summary': 'Name',
            },
            ContentBytes: {
              format: 'byte',
              description: 'Attachment content',
              type: 'string',
              'x-ms-summary': 'Content',
            },
          },
        },
        'x-ms-summary': 'Attachments',
        'x-ms-visibility': 'advanced',
        'x-ms-editor': 'array',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'array',
      value: [
        {
          id: '46F55E72-94B9-49DE-814F-62CA65C2BB95',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.Sensitivity': {
      id: 'B319F7FE-5442-445C-B420-F7083CF71603',
      dynamicData: {
        status: 'succeeded',
      },
      editor: 'combobox',
      editorOptions: {
        options: [
          {
            value: '87ba5c36-b7cf-4793-bbc2-bd5b3a9f95ca',
            displayName: 'Non-Business',
            disabled: false,
          },
          {
            value: '87867195-f2b8-4ac2-b0b6-6bb73cb33afc',
            displayName: 'Public',
            disabled: false,
          },
          {
            value: 'f42aa342-8706-4288-bd11-ebb85995028c',
            displayName: 'General',
            disabled: false,
          },
          {
            value: '1a19d03a-48bc-4359-8038-5b5f6d5847c3',
            displayName: 'Confidential\\Any User (No Protection)',
            disabled: false,
          },
          {
            value: '9fbde396-1a24-4c79-8edf-9254a0f35055',
            displayName: 'Confidential\\Microsoft Extended',
            disabled: false,
          },
          {
            value: 'd9f23ae3-a239-45ea-bf23-f515f824c57b',
            displayName: 'Confidential\\Microsoft FTE',
            disabled: false,
          },
          {
            value: 'fec751d2-ff79-4176-b06f-8a50d675b290',
            displayName: 'Confidential\\Recipients Only',
            disabled: false,
          },
          {
            value: 'b7b9f8f9-3cae-48b6-8b79-2f3f184fa0ea',
            displayName: 'Highly Confidential\\Any User (No Protection)',
            disabled: false,
          },
          {
            value: 'c179f820-d535-4b2f-b252-8a9c4ac14ec6',
            displayName: 'Highly Confidential\\Microsoft Extended',
            disabled: false,
          },
          {
            value: 'f74878b7-c0ff-44a4-82ff-8ce29f7fccb5',
            displayName: 'Highly Confidential\\Microsoft FTE',
            disabled: false,
          },
          {
            value: 'a4239ae8-df55-4508-b037-a46ec1e6b836',
            displayName: 'Highly Confidential\\Recipients Only',
            disabled: false,
          },
        ],
      },
      info: {
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'Sensitivity',
      parameterKey: 'body.$.Sensitivity',
      parameterName: 'Sensitivity',
      placeholder: 'Sensitivity',
      required: false,
      schema: {
        description: 'Sensitivity',
        type: 'string',
        'x-ms-summary': 'Sensitivity',
        'x-ms-visibility': 'advanced',
        'x-ms-dynamic-values': {
          operationId: 'GetSensitivityLabels',
          parameters: {},
          'value-path': 'Id',
          'value-title': 'DisplayName',
        },
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: 'AE841B3E-DE7E-4017-865B-2C893372EF71',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.ReplyTo': {
      id: '3C90B2C2-10AE-4F66-BA68-7FCF7440A46B',
      info: {
        format: 'email',
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: false,
      label: 'Reply To',
      parameterKey: 'body.$.ReplyTo',
      parameterName: 'ReplyTo',
      placeholder: 'The email addresses to use when replying',
      required: false,
      schema: {
        format: 'email',
        description: 'The email addresses to use when replying',
        type: 'string',
        'x-ms-summary': 'Reply To',
        'x-ms-visibility': 'advanced',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: '7B1B1EB0-D61E-420B-9676-DBD08779BC6B',
          type: 'literal',
          value: '',
        },
      ],
      visibility: 'advanced',
    },
    'body.$.Importance': {
      id: 'DF92F42C-D660-47AB-89E8-E5BC005714CE',
      editor: 'combobox',
      editorOptions: {
        options: [
          {
            displayName: 'Low',
            value: 'Low',
            key: 'Low',
          },
          {
            displayName: 'Normal',
            value: 'Normal',
            key: 'Normal',
          },
          {
            displayName: 'High',
            value: 'High',
            key: 'High',
          },
        ],
      },
      info: {
        in: 'body',
        isDynamic: false,
      },
      hideInUI: false,
      conditionalVisibility: true,
      label: 'Importance',
      parameterKey: 'body.$.Importance',
      parameterName: 'Importance',
      placeholder: 'Importance',
      preservedValue: 'Normal',
      required: false,
      schema: {
        description: 'Importance',
        default: 'Normal',
        enum: ['Low', 'Normal', 'High'],
        type: 'string',
        'x-ms-summary': 'Importance',
        'x-ms-visibility': 'advanced',
      },
      showErrors: false,
      showTokens: true,
      suppressCasting: false,
      type: 'string',
      value: [
        {
          id: 'A14AAB2C-255D-416A-8740-70774D91C2AF',
          type: 'literal',
          value: 'Normal',
        },
      ],
      visibility: 'advanced',
    },
  },
  outputs: {
    statusCode: 200,
    headers: {
      'Cache-Control': 'no-store, no-cache',
      Pragma: 'no-cache',
      'Set-Cookie': 'cookies',
      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',
      'x-ms-request-id': 'd7108db1-47b8-bcce-8239-d67e8eaf3cad',
      'X-Content-Type-Options': 'nosniff',
      'X-Frame-Options': 'DENY',
      'x-ms-environment-id': '483a77f0be37e98e',
      'Timing-Allow-Origin': '*',
      'x-ms-apihub-cached-response': 'false',
      'x-ms-apihub-obo': 'false',
      Date: 'Wed, 18 Sep 2024 20:20:03 GMT',
    },
  },
  outputsParametersByName: {
    'body.$': {
      key: 'body.$',
      type: 'any',
      isAdvanced: false,
      name: 'key-body-output',
      title: 'Body',
      schema: {},
      source: 'body',
      required: true,
    },
  },
};
