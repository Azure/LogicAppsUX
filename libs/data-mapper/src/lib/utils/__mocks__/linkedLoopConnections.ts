import type { Connection, ConnectionDictionary } from '../../models/Connection';
import { NormalizedDataType, SchemaNodeProperty } from '@microsoft/logic-apps-shared';

export const manyToManyConnectionSourceName =
  'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect';
export const manyToManyConnectionTargetName = 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct';

export const manyToOneConnectionSourceName =
  'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect';
export const manyToOneConnectionTargetName = 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct';

export const manyToManyConnectionFromSource: Connection = {
  self: {
    node: {
      key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
      name: 'SourceDirect',
      type: NormalizedDataType.String,
      properties: 'None',
      qName: 'SourceDirect',
      parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
      nodeProperties: [SchemaNodeProperty.None],
      children: [],
      pathToRoot: [
        {
          key: '/ns0:SourceSchemaRoot',
          name: 'SourceSchemaRoot',
          qName: 'ns0:SourceSchemaRoot',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping',
          name: 'Looping',
          qName: 'Looping',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany',
          name: 'ManyToMany',
          qName: 'ManyToMany',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
          name: 'Simple',
          qName: 'Simple',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
          name: 'SourceSimpleChild',
          qName: 'SourceSimpleChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
          name: 'SourceSimpleChildChild',
          qName: 'SourceSimpleChildChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
          name: 'SourceDirect',
          qName: 'SourceDirect',
          repeating: false,
        },
      ],
      arrayItemIndex: undefined,
    },
    reactFlowKey: 'target-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
  },
  inputs: {
    '0': [
      {
        node: {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
          name: 'SourceDirect',
          type: NormalizedDataType.String,
          properties: 'None',
          qName: 'SourceDirect',
          parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
          nodeProperties: [SchemaNodeProperty.None],
          children: [],
          pathToRoot: [
            {
              key: '/ns0:SourceSchemaRoot',
              name: 'SourceSchemaRoot',
              qName: 'ns0:SourceSchemaRoot',
              repeating: false,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToMany',
              name: 'ManyToMany',
              qName: 'ManyToMany',
              repeating: false,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
              name: 'SourceSimpleChild',
              qName: 'SourceSimpleChild',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
              name: 'SourceSimpleChildChild',
              qName: 'SourceSimpleChildChild',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
              name: 'SourceDirect',
              qName: 'SourceDirect',
              repeating: false,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
      },
    ],
  },
  outputs: [],
};

export const manyToManyConnectionFromTarget: Connection = {
  self: {
    node: {
      key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
      name: 'SourceDirect',
      type: NormalizedDataType.String,
      properties: 'None',
      qName: 'SourceDirect',
      parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
      nodeProperties: [SchemaNodeProperty.None],
      children: [],
      pathToRoot: [
        {
          key: '/ns0:SourceSchemaRoot',
          name: 'SourceSchemaRoot',
          qName: 'ns0:SourceSchemaRoot',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping',
          name: 'Looping',
          qName: 'Looping',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany',
          name: 'ManyToMany',
          qName: 'ManyToMany',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
          name: 'Simple',
          qName: 'Simple',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
          name: 'SourceSimpleChild',
          qName: 'SourceSimpleChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
          name: 'SourceSimpleChildChild',
          qName: 'SourceSimpleChildChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
          name: 'SourceDirect',
          qName: 'SourceDirect',
          repeating: false,
        },
      ],
      arrayItemIndex: undefined,
    },
    reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
  },
  inputs: {
    '0': [],
  },
  outputs: [
    {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
        name: 'Direct',
        type: NormalizedDataType.String,
        properties: 'None',
        qName: 'Direct',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
        nodeProperties: [SchemaNodeProperty.None],
        children: [],
        pathToRoot: [
          {
            key: '/ns0:TargetSchemaRoot',
            name: 'TargetSchemaRoot',
            qName: 'ns0:TargetSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping',
            name: 'Looping',
            qName: 'Looping',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany',
            name: 'ManyToMany',
            qName: 'ManyToMany',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            qName: 'SimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
            name: 'SimpleChildChild',
            qName: 'SimpleChildChild',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
            name: 'Direct',
            qName: 'Direct',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
    },
  ],
};

export const manyToOneConnectionFromTarget: Connection = {
  self: {
    node: {
      key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
      name: 'Direct',
      type: NormalizedDataType.String,
      properties: 'None',
      children: [],
      qName: 'Direct',
      parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
      nodeProperties: [SchemaNodeProperty.None],
      pathToRoot: [
        {
          key: '/ns0:TargetSchemaRoot',
          name: 'TargetSchemaRoot',
          qName: 'ns0:TargetSchemaRoot',
          repeating: false,
        },
        {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
          name: 'ManyToOne',
          qName: 'ManyToOne',
          repeating: false,
        },
        {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
          name: 'Simple',
          qName: 'Simple',
          repeating: true,
        },
        {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
          name: 'Direct',
          qName: 'Direct',
          repeating: false,
        },
      ],
      arrayItemIndex: undefined,
    },
    reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
  },
  inputs: {
    '0': [
      {
        node: {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
          name: 'SourceDirect',
          type: NormalizedDataType.String,
          properties: 'None',
          qName: 'SourceDirect',
          parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
          nodeProperties: [SchemaNodeProperty.None],
          children: [],
          pathToRoot: [
            {
              key: '/ns0:Root',
              name: 'Root',
              qName: 'ns0:Root',
              repeating: false,
            },
            {
              key: '/ns0:Root/ManyToOne',
              name: 'ManyToOne',
              qName: 'ManyToOne',
              repeating: false,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
              name: 'SourceSimpleChild',
              qName: 'SourceSimpleChild',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
              name: 'SourceSimpleChildChild',
              qName: 'SourceSimpleChildChild',
              repeating: true,
            },
            {
              key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
              name: 'SourceDirect',
              qName: 'SourceDirect',
              repeating: false,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
      },
    ],
  },
  outputs: [],
};

export const manyToOneConnectionFromSource: Connection = {
  self: {
    node: {
      key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
      name: 'SourceDirect',
      type: NormalizedDataType.String,
      properties: 'None',
      qName: 'SourceDirect',
      parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
      nodeProperties: [SchemaNodeProperty.None],
      children: [],
      pathToRoot: [
        {
          key: '/ns0:Root',
          name: 'Root',
          qName: 'ns0:Root',
          repeating: false,
        },
        {
          key: '/ns0:Root/ManyToOne',
          name: 'ManyToOne',
          qName: 'ManyToOne',
          repeating: false,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
          name: 'Simple',
          qName: 'Simple',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
          name: 'SourceSimpleChild',
          qName: 'SourceSimpleChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
          name: 'SourceSimpleChildChild',
          qName: 'SourceSimpleChildChild',
          repeating: true,
        },
        {
          key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
          name: 'SourceDirect',
          qName: 'SourceDirect',
          repeating: false,
        },
      ],
      arrayItemIndex: undefined,
    },
    reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
  },
  inputs: {
    '0': [],
  },
  outputs: [
    {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
        name: 'Direct',
        type: NormalizedDataType.String,
        properties: 'None',
        children: [],
        qName: 'Direct',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
        nodeProperties: [SchemaNodeProperty.None],
        pathToRoot: [
          {
            key: '/ns0:Root',
            name: 'Root',
            qName: 'ns0:Root',
            repeating: false,
          },
          {
            key: '/ns0:Root/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
            name: 'Direct',
            qName: 'Direct',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
    },
  ],
};

export const fullMapForSimplifiedLoop: ConnectionDictionary = {
  'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
        name: 'Direct',
        type: NormalizedDataType.String,
        properties: 'None',
        qName: 'Direct',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
        nodeProperties: [SchemaNodeProperty.None],
        children: [],
        pathToRoot: [
          { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            qName: 'SimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
            name: 'SimpleChildChild',
            qName: 'SimpleChildChild',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
            name: 'Direct',
            qName: 'Direct',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            type: NormalizedDataType.String,
            properties: 'None',
            qName: 'SourceDirect',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            nodeProperties: [SchemaNodeProperty.None],
            children: [],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                qName: 'SourceDirect',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
        name: 'SourceDirect',
        type: NormalizedDataType.String,
        properties: 'None',
        qName: 'SourceDirect',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
        nodeProperties: [SchemaNodeProperty.None],
        children: [],
        pathToRoot: [
          { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            qName: 'SourceSimpleChildChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            qName: 'SourceDirect',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
    },
    inputs: { '0': [] },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
          name: 'Direct',
          type: NormalizedDataType.String,
          properties: 'None',
          qName: 'Direct',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
          nodeProperties: [SchemaNodeProperty.None],
          children: [],
          pathToRoot: [
            { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
              name: 'SimpleChild',
              qName: 'SimpleChild',
              repeating: true,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
              name: 'SimpleChildChild',
              qName: 'SimpleChildChild',
              repeating: true,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
              name: 'Direct',
              qName: 'Direct',
              repeating: false,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
      },
    ],
  },
  'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
        name: 'SimpleChildChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
            name: 'Direct',
            type: NormalizedDataType.String,
            properties: 'None',
            qName: 'Direct',
            parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
            nodeProperties: [SchemaNodeProperty.None],
            children: [],
            pathToRoot: [
              { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                name: 'SimpleChild',
                qName: 'SimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                name: 'SimpleChildChild',
                qName: 'SimpleChildChild',
                repeating: true,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                name: 'Direct',
                qName: 'Direct',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SimpleChildChild',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            qName: 'SimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
            name: 'SimpleChildChild',
            qName: 'SimpleChildChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                type: NormalizedDataType.String,
                properties: 'None',
                qName: 'SourceDirect',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                nodeProperties: [SchemaNodeProperty.None],
                children: [],
                pathToRoot: [
                  { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    qName: 'SourceDirect',
                    repeating: false,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChildChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
        name: 'SourceSimpleChildChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            type: NormalizedDataType.String,
            properties: 'None',
            qName: 'SourceDirect',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            nodeProperties: [SchemaNodeProperty.None],
            children: [],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                qName: 'SourceDirect',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SourceSimpleChildChild',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            qName: 'SourceSimpleChildChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
    },
    inputs: { '0': [] },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
          name: 'SimpleChildChild',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
              name: 'Direct',
              type: NormalizedDataType.String,
              properties: 'None',
              qName: 'Direct',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
              nodeProperties: [SchemaNodeProperty.None],
              children: [],
              pathToRoot: [
                { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                  name: 'SimpleChild',
                  qName: 'SimpleChild',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                  name: 'SimpleChildChild',
                  qName: 'SimpleChildChild',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                  name: 'Direct',
                  qName: 'Direct',
                  repeating: false,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'SimpleChildChild',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
              name: 'SimpleChild',
              qName: 'SimpleChild',
              repeating: true,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
              name: 'SimpleChildChild',
              qName: 'SimpleChildChild',
              repeating: true,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
      },
    ],
  },
  'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
        name: 'SimpleChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
            name: 'SimpleChildChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                name: 'Direct',
                type: NormalizedDataType.String,
                properties: 'None',
                qName: 'Direct',
                parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                nodeProperties: [SchemaNodeProperty.None],
                children: [],
                pathToRoot: [
                  { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                    name: 'SimpleChild',
                    qName: 'SimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                    name: 'SimpleChildChild',
                    qName: 'SimpleChildChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                    name: 'Direct',
                    qName: 'Direct',
                    repeating: false,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SimpleChildChild',
            parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                name: 'SimpleChild',
                qName: 'SimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                name: 'SimpleChildChild',
                qName: 'SimpleChildChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SimpleChild',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            qName: 'SimpleChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                name: 'SimpleChildChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                    name: 'Direct',
                    type: NormalizedDataType.String,
                    properties: 'None',
                    qName: 'Direct',
                    parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                    nodeProperties: [SchemaNodeProperty.None],
                    children: [],
                    pathToRoot: [
                      { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                      { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                      { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                        name: 'SimpleChild',
                        qName: 'SimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                        name: 'SimpleChildChild',
                        qName: 'SimpleChildChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                        name: 'Direct',
                        qName: 'Direct',
                        repeating: false,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SimpleChildChild',
                parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                    name: 'SimpleChild',
                    qName: 'SimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                    name: 'SimpleChildChild',
                    qName: 'SimpleChildChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SimpleChild',
            parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                name: 'SimpleChild',
                qName: 'SimpleChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
        name: 'SourceSimpleChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                type: NormalizedDataType.String,
                properties: 'None',
                qName: 'SourceDirect',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                nodeProperties: [SchemaNodeProperty.None],
                children: [],
                pathToRoot: [
                  { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    qName: 'SourceDirect',
                    repeating: false,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChildChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SourceSimpleChild',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
    },
    inputs: { '0': [] },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
          name: 'SimpleChild',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
              name: 'SimpleChildChild',
              type: NormalizedDataType.Complex,
              properties: 'Repeating',
              children: [
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                  name: 'Direct',
                  type: NormalizedDataType.String,
                  properties: 'None',
                  qName: 'Direct',
                  parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                  nodeProperties: [SchemaNodeProperty.None],
                  children: [],
                  pathToRoot: [
                    { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                    { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                    { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                      name: 'SimpleChild',
                      qName: 'SimpleChild',
                      repeating: true,
                    },
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                      name: 'SimpleChildChild',
                      qName: 'SimpleChildChild',
                      repeating: true,
                    },
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                      name: 'Direct',
                      qName: 'Direct',
                      repeating: false,
                    },
                  ],
                  arrayItemIndex: undefined,
                },
              ],
              qName: 'SimpleChildChild',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
              nodeProperties: [SchemaNodeProperty.Repeating],
              pathToRoot: [
                { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                  name: 'SimpleChild',
                  qName: 'SimpleChild',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                  name: 'SimpleChildChild',
                  qName: 'SimpleChildChild',
                  repeating: true,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'SimpleChild',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
              name: 'SimpleChild',
              qName: 'SimpleChild',
              repeating: true,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
      },
    ],
  },
  'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
        name: 'Simple',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
            name: 'SimpleChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                name: 'SimpleChildChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                    name: 'Direct',
                    type: NormalizedDataType.String,
                    properties: 'None',
                    qName: 'Direct',
                    parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                    nodeProperties: [SchemaNodeProperty.None],
                    children: [],
                    pathToRoot: [
                      { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                      { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                      { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                        name: 'SimpleChild',
                        qName: 'SimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                        name: 'SimpleChildChild',
                        qName: 'SimpleChildChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                        name: 'Direct',
                        qName: 'Direct',
                        repeating: false,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SimpleChildChild',
                parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                    name: 'SimpleChild',
                    qName: 'SimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                    name: 'SimpleChildChild',
                    qName: 'SimpleChildChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SimpleChild',
            parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                name: 'SimpleChild',
                qName: 'SimpleChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'Simple',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
            name: 'Simple',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    type: NormalizedDataType.Complex,
                    properties: 'Repeating',
                    children: [
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                        name: 'SourceDirect',
                        type: NormalizedDataType.String,
                        properties: 'None',
                        qName: 'SourceDirect',
                        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        nodeProperties: [SchemaNodeProperty.None],
                        children: [],
                        pathToRoot: [
                          { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                            name: 'SourceSimpleChild',
                            qName: 'SourceSimpleChild',
                            repeating: true,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                            name: 'SourceSimpleChildChild',
                            qName: 'SourceSimpleChildChild',
                            repeating: true,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                            name: 'SourceDirect',
                            qName: 'SourceDirect',
                            repeating: false,
                          },
                        ],
                        arrayItemIndex: undefined,
                      },
                    ],
                    qName: 'SourceSimpleChildChild',
                    parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                    nodeProperties: [SchemaNodeProperty.Repeating],
                    pathToRoot: [
                      { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                      { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                      { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                        name: 'SourceSimpleChild',
                        qName: 'SourceSimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        name: 'SourceSimpleChildChild',
                        qName: 'SourceSimpleChildChild',
                        repeating: true,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SourceSimpleChild',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'Simple',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
        name: 'Simple',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    type: NormalizedDataType.String,
                    properties: 'None',
                    qName: 'SourceDirect',
                    parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    nodeProperties: [SchemaNodeProperty.None],
                    children: [],
                    pathToRoot: [
                      { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                      { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                      { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                        name: 'SourceSimpleChild',
                        qName: 'SourceSimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        name: 'SourceSimpleChildChild',
                        qName: 'SourceSimpleChildChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                        name: 'SourceDirect',
                        qName: 'SourceDirect',
                        repeating: false,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SourceSimpleChildChild',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                  { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
              { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'Simple',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToMany',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          { key: '/ns0:SourceSchemaRoot', name: 'SourceSchemaRoot', qName: 'ns0:SourceSchemaRoot', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
          { key: '/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToMany/Simple',
    },
    inputs: { '0': [] },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
          name: 'Simple',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
              name: 'SimpleChild',
              type: NormalizedDataType.Complex,
              properties: 'Repeating',
              children: [
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                  name: 'SimpleChildChild',
                  type: NormalizedDataType.Complex,
                  properties: 'Repeating',
                  children: [
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                      name: 'Direct',
                      type: NormalizedDataType.String,
                      properties: 'None',
                      qName: 'Direct',
                      parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                      nodeProperties: [SchemaNodeProperty.None],
                      children: [],
                      pathToRoot: [
                        { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                        { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                        { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                        { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                        {
                          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                          name: 'SimpleChild',
                          qName: 'SimpleChild',
                          repeating: true,
                        },
                        {
                          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                          name: 'SimpleChildChild',
                          qName: 'SimpleChildChild',
                          repeating: true,
                        },
                        {
                          key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild/Direct',
                          name: 'Direct',
                          qName: 'Direct',
                          repeating: false,
                        },
                      ],
                      arrayItemIndex: undefined,
                    },
                  ],
                  qName: 'SimpleChildChild',
                  parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                  nodeProperties: [SchemaNodeProperty.Repeating],
                  pathToRoot: [
                    { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                    { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                    { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                    { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                      name: 'SimpleChild',
                      qName: 'SimpleChild',
                      repeating: true,
                    },
                    {
                      key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild/SimpleChildChild',
                      name: 'SimpleChildChild',
                      qName: 'SimpleChildChild',
                      repeating: true,
                    },
                  ],
                  arrayItemIndex: undefined,
                },
              ],
              qName: 'SimpleChild',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
              nodeProperties: [SchemaNodeProperty.Repeating],
              pathToRoot: [
                { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
                { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple/SimpleChild',
                  name: 'SimpleChild',
                  qName: 'SimpleChild',
                  repeating: true,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'Simple',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToMany',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            { key: '/ns0:TargetSchemaRoot', name: 'TargetSchemaRoot', qName: 'ns0:TargetSchemaRoot', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping', name: 'Looping', qName: 'Looping', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany', name: 'ManyToMany', qName: 'ManyToMany', repeating: false },
            { key: '/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple', name: 'Simple', qName: 'Simple', repeating: true },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToMany/Simple',
      },
    ],
  },
};

export const fullConnectionDictionaryForOneToManyLoop: ConnectionDictionary = {
  'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
        name: 'Direct',
        type: NormalizedDataType.String,
        properties: 'None',
        children: [],
        qName: 'Direct',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
        nodeProperties: [SchemaNodeProperty.None],
        pathToRoot: [
          {
            key: '/ns0:TargetSchemaRoot',
            name: 'TargetSchemaRoot',
            qName: 'ns0:TargetSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping',
            name: 'Looping',
            qName: 'Looping',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
            name: 'Direct',
            qName: 'Direct',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            type: NormalizedDataType.String,
            properties: 'None',
            qName: 'SourceDirect',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            nodeProperties: [SchemaNodeProperty.None],
            children: [],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                qName: 'SourceDirect',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
        name: 'SourceDirect',
        type: NormalizedDataType.String,
        properties: 'None',
        qName: 'SourceDirect',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
        nodeProperties: [SchemaNodeProperty.None],
        children: [],
        pathToRoot: [
          {
            key: '/ns0:SourceSchemaRoot',
            name: 'SourceSchemaRoot',
            qName: 'ns0:SourceSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            qName: 'SourceSimpleChildChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            qName: 'SourceDirect',
            repeating: false,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
    },
    inputs: {
      '0': [],
    },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
          name: 'Direct',
          type: NormalizedDataType.String,
          properties: 'None',
          children: [],
          qName: 'Direct',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
          nodeProperties: [SchemaNodeProperty.None],
          pathToRoot: [
            {
              key: '/ns0:TargetSchemaRoot',
              name: 'TargetSchemaRoot',
              qName: 'ns0:TargetSchemaRoot',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping',
              name: 'Looping',
              qName: 'Looping',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
              name: 'ManyToOne',
              qName: 'ManyToOne',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
              name: 'Direct',
              qName: 'Direct',
              repeating: false,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
      },
    ],
  },
  'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple': {
    self: {
      node: {
        key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
        name: 'Simple',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
            name: 'Direct',
            type: NormalizedDataType.String,
            properties: 'None',
            children: [],
            qName: 'Direct',
            parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
            nodeProperties: [SchemaNodeProperty.None],
            pathToRoot: [
              {
                key: '/ns0:TargetSchemaRoot',
                name: 'TargetSchemaRoot',
                qName: 'ns0:TargetSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
                name: 'Direct',
                qName: 'Direct',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'Simple',
        parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          {
            key: '/ns0:TargetSchemaRoot',
            name: 'TargetSchemaRoot',
            qName: 'ns0:TargetSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping',
            name: 'Looping',
            qName: 'Looping',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
    },
    inputs: {
      '0': [
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                type: NormalizedDataType.String,
                properties: 'None',
                qName: 'SourceDirect',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                nodeProperties: [SchemaNodeProperty.None],
                children: [],
                pathToRoot: [
                  {
                    key: '/ns0:SourceSchemaRoot',
                    name: 'SourceSchemaRoot',
                    qName: 'ns0:SourceSchemaRoot',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                    name: 'ManyToOne',
                    qName: 'ManyToOne',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                    name: 'Simple',
                    qName: 'Simple',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    qName: 'SourceDirect',
                    repeating: false,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChildChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
        },
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    type: NormalizedDataType.String,
                    properties: 'None',
                    qName: 'SourceDirect',
                    parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    nodeProperties: [SchemaNodeProperty.None],
                    children: [],
                    pathToRoot: [
                      {
                        key: '/ns0:SourceSchemaRoot',
                        name: 'SourceSchemaRoot',
                        qName: 'ns0:SourceSchemaRoot',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                        name: 'ManyToOne',
                        qName: 'ManyToOne',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                        name: 'Simple',
                        qName: 'Simple',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                        name: 'SourceSimpleChild',
                        qName: 'SourceSimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        name: 'SourceSimpleChildChild',
                        qName: 'SourceSimpleChildChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                        name: 'SourceDirect',
                        qName: 'SourceDirect',
                        repeating: false,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SourceSimpleChildChild',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  {
                    key: '/ns0:SourceSchemaRoot',
                    name: 'SourceSchemaRoot',
                    qName: 'ns0:SourceSchemaRoot',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                    name: 'ManyToOne',
                    qName: 'ManyToOne',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                    name: 'Simple',
                    qName: 'Simple',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
        },
        {
          node: {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    type: NormalizedDataType.Complex,
                    properties: 'Repeating',
                    children: [
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                        name: 'SourceDirect',
                        type: NormalizedDataType.String,
                        properties: 'None',
                        qName: 'SourceDirect',
                        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        nodeProperties: [SchemaNodeProperty.None],
                        children: [],
                        pathToRoot: [
                          {
                            key: '/ns0:SourceSchemaRoot',
                            name: 'SourceSchemaRoot',
                            qName: 'ns0:SourceSchemaRoot',
                            repeating: false,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                            name: 'ManyToOne',
                            qName: 'ManyToOne',
                            repeating: false,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                            name: 'Simple',
                            qName: 'Simple',
                            repeating: true,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                            name: 'SourceSimpleChild',
                            qName: 'SourceSimpleChild',
                            repeating: true,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                            name: 'SourceSimpleChildChild',
                            qName: 'SourceSimpleChildChild',
                            repeating: true,
                          },
                          {
                            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                            name: 'SourceDirect',
                            qName: 'SourceDirect',
                            repeating: false,
                          },
                        ],
                        arrayItemIndex: undefined,
                      },
                    ],
                    qName: 'SourceSimpleChildChild',
                    parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    nodeProperties: [SchemaNodeProperty.Repeating],
                    pathToRoot: [
                      {
                        key: '/ns0:SourceSchemaRoot',
                        name: 'SourceSchemaRoot',
                        qName: 'ns0:SourceSchemaRoot',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                        name: 'ManyToOne',
                        qName: 'ManyToOne',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                        name: 'Simple',
                        qName: 'Simple',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                        name: 'SourceSimpleChild',
                        qName: 'SourceSimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        name: 'SourceSimpleChildChild',
                        qName: 'SourceSimpleChildChild',
                        repeating: true,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SourceSimpleChild',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  {
                    key: '/ns0:SourceSchemaRoot',
                    name: 'SourceSchemaRoot',
                    qName: 'ns0:SourceSchemaRoot',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                    name: 'ManyToOne',
                    qName: 'ManyToOne',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                    name: 'Simple',
                    qName: 'Simple',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'Simple',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
          reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
        },
      ],
    },
    outputs: [],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
        name: 'SourceSimpleChildChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
            name: 'SourceDirect',
            type: NormalizedDataType.String,
            properties: 'None',
            qName: 'SourceDirect',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            nodeProperties: [SchemaNodeProperty.None],
            children: [],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceDirect',
                qName: 'SourceDirect',
                repeating: false,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SourceSimpleChildChild',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          {
            key: '/ns0:SourceSchemaRoot',
            name: 'SourceSchemaRoot',
            qName: 'ns0:SourceSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            qName: 'SourceSimpleChildChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
    },
    inputs: {
      '0': [],
    },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
          name: 'Simple',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
              name: 'Direct',
              type: NormalizedDataType.String,
              properties: 'None',
              children: [],
              qName: 'Direct',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              nodeProperties: [SchemaNodeProperty.None],
              pathToRoot: [
                {
                  key: '/ns0:TargetSchemaRoot',
                  name: 'TargetSchemaRoot',
                  qName: 'ns0:TargetSchemaRoot',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping',
                  name: 'Looping',
                  qName: 'Looping',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
                  name: 'ManyToOne',
                  qName: 'ManyToOne',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
                  name: 'Simple',
                  qName: 'Simple',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
                  name: 'Direct',
                  qName: 'Direct',
                  repeating: false,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'Simple',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            {
              key: '/ns0:TargetSchemaRoot',
              name: 'TargetSchemaRoot',
              qName: 'ns0:TargetSchemaRoot',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
              name: 'ManyToOne',
              qName: 'ManyToOne',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
      },
    ],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
        name: 'SourceSimpleChild',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
            name: 'SourceSimpleChildChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                name: 'SourceSourceDirect',
                type: NormalizedDataType.String,
                properties: 'None',
                qName: 'SourceSourceDirect',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                nodeProperties: [SchemaNodeProperty.None],
                children: [],
                pathToRoot: [
                  {
                    key: '/ns0:SourceSchemaRoot',
                    name: 'SourceSchemaRoot',
                    qName: 'ns0:SourceSchemaRoot',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                    name: 'ManyToOne',
                    qName: 'ManyToOne',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                    name: 'Simple',
                    qName: 'Simple',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceSourceDirect',
                    qName: 'SourceSourceDirect',
                    repeating: false,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChildChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                qName: 'SourceSimpleChildChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'SourceSimpleChild',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          {
            key: '/ns0:SourceSchemaRoot',
            name: 'SourceSchemaRoot',
            qName: 'ns0:SourceSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            qName: 'SourceSimpleChild',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
    },
    inputs: {
      '0': [],
    },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
          name: 'Simple',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
              name: 'Direct',
              type: NormalizedDataType.String,
              properties: 'None',
              children: [],
              qName: 'Direct',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              nodeProperties: [SchemaNodeProperty.None],
              pathToRoot: [
                {
                  key: '/ns0:TargetSchemaRoot',
                  name: 'TargetSchemaRoot',
                  qName: 'ns0:TargetSchemaRoot',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping',
                  name: 'Looping',
                  qName: 'Looping',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
                  name: 'ManyToOne',
                  qName: 'ManyToOne',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
                  name: 'Simple',
                  qName: 'Simple',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
                  name: 'Direct',
                  qName: 'Direct',
                  repeating: false,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'Simple',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            {
              key: '/ns0:TargetSchemaRoot',
              name: 'TargetSchemaRoot',
              qName: 'ns0:TargetSchemaRoot',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
              name: 'ManyToOne',
              qName: 'ManyToOne',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
      },
    ],
  },
  'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple': {
    self: {
      node: {
        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
        name: 'Simple',
        type: NormalizedDataType.Complex,
        properties: 'Repeating',
        children: [
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
            name: 'SourceSimpleChild',
            type: NormalizedDataType.Complex,
            properties: 'Repeating',
            children: [
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                name: 'SourceSimpleChildChild',
                type: NormalizedDataType.Complex,
                properties: 'Repeating',
                children: [
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                    name: 'SourceDirect',
                    type: NormalizedDataType.String,
                    properties: 'None',
                    qName: 'SourceDirect',
                    parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    nodeProperties: [SchemaNodeProperty.None],
                    children: [],
                    pathToRoot: [
                      {
                        key: '/ns0:SourceSchemaRoot',
                        name: 'SourceSchemaRoot',
                        qName: 'ns0:SourceSchemaRoot',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                        name: 'ManyToOne',
                        qName: 'ManyToOne',
                        repeating: false,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                        name: 'Simple',
                        qName: 'Simple',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                        name: 'SourceSimpleChild',
                        qName: 'SourceSimpleChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                        name: 'SourceSimpleChildChild',
                        qName: 'SourceSimpleChildChild',
                        repeating: true,
                      },
                      {
                        key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild/SourceDirect',
                        name: 'SourceDirect',
                        qName: 'SourceDirect',
                        repeating: false,
                      },
                    ],
                    arrayItemIndex: undefined,
                  },
                ],
                qName: 'SourceSimpleChildChild',
                parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                nodeProperties: [SchemaNodeProperty.Repeating],
                pathToRoot: [
                  {
                    key: '/ns0:SourceSchemaRoot',
                    name: 'SourceSchemaRoot',
                    qName: 'ns0:SourceSchemaRoot',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                    name: 'ManyToOne',
                    qName: 'ManyToOne',
                    repeating: false,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                    name: 'Simple',
                    qName: 'Simple',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                    name: 'SourceSimpleChild',
                    qName: 'SourceSimpleChild',
                    repeating: true,
                  },
                  {
                    key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild/SourceSimpleChildChild',
                    name: 'SourceSimpleChildChild',
                    qName: 'SourceSimpleChildChild',
                    repeating: true,
                  },
                ],
                arrayItemIndex: undefined,
              },
            ],
            qName: 'SourceSimpleChild',
            parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            nodeProperties: [SchemaNodeProperty.Repeating],
            pathToRoot: [
              {
                key: '/ns0:SourceSchemaRoot',
                name: 'SourceSchemaRoot',
                qName: 'ns0:SourceSchemaRoot',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping',
                name: 'Looping',
                qName: 'Looping',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
                name: 'ManyToOne',
                qName: 'ManyToOne',
                repeating: false,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
                name: 'Simple',
                qName: 'Simple',
                repeating: true,
              },
              {
                key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple/SourceSimpleChild',
                name: 'SourceSimpleChild',
                qName: 'SourceSimpleChild',
                repeating: true,
              },
            ],
            arrayItemIndex: undefined,
          },
        ],
        qName: 'Simple',
        parentKey: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
        nodeProperties: [SchemaNodeProperty.Repeating],
        pathToRoot: [
          {
            key: '/ns0:SourceSchemaRoot',
            name: 'SourceSchemaRoot',
            qName: 'ns0:SourceSchemaRoot',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne',
            name: 'ManyToOne',
            qName: 'ManyToOne',
            repeating: false,
          },
          {
            key: '/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
            name: 'Simple',
            qName: 'Simple',
            repeating: true,
          },
        ],
        arrayItemIndex: undefined,
      },
      reactFlowKey: 'source-/ns0:SourceSchemaRoot/Looping/ManyToOne/Simple',
    },
    inputs: {
      '0': [],
    },
    outputs: [
      {
        node: {
          key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
          name: 'Simple',
          type: NormalizedDataType.Complex,
          properties: 'Repeating',
          children: [
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
              name: 'Direct',
              type: NormalizedDataType.String,
              properties: 'None',
              children: [],
              qName: 'Direct',
              parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              nodeProperties: [SchemaNodeProperty.None],
              pathToRoot: [
                {
                  key: '/ns0:TargetSchemaRoot',
                  name: 'TargetSchemaRoot',
                  qName: 'ns0:TargetSchemaRoot',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping',
                  name: 'Looping',
                  qName: 'Looping',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
                  name: 'ManyToOne',
                  qName: 'ManyToOne',
                  repeating: false,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
                  name: 'Simple',
                  qName: 'Simple',
                  repeating: true,
                },
                {
                  key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple/Direct',
                  name: 'Direct',
                  qName: 'Direct',
                  repeating: false,
                },
              ],
              arrayItemIndex: undefined,
            },
          ],
          qName: 'Simple',
          parentKey: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
          nodeProperties: [SchemaNodeProperty.Repeating],
          pathToRoot: [
            {
              key: '/ns0:TargetSchemaRoot',
              name: 'TargetSchemaRoot',
              qName: 'ns0:TargetSchemaRoot',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne',
              name: 'ManyToOne',
              qName: 'ManyToOne',
              repeating: false,
            },
            {
              key: '/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
              name: 'Simple',
              qName: 'Simple',
              repeating: true,
            },
          ],
          arrayItemIndex: undefined,
        },
        reactFlowKey: 'target-/ns0:TargetSchemaRoot/Looping/ManyToOne/Simple',
      },
    ],
  },
};
