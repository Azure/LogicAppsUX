import type { DataMapSchema } from '@microsoft/logic-apps-shared';

const TargetSchemaJson: DataMapSchema = {
  name: 'TargetSchemaJson.json',
  type: 'JSON',
  targetNamespace: '',
  schemaTreeRoot: {
    key: '/root',
    name: 'root',
    type: 'Object',
    properties: 'None',
    children: [
      {
        key: '/root/String1',
        name: 'String1',
        type: 'String',
        properties: 'None',
        qName: 'String1',
        children: [],
      },
      {
        key: '/root/Object1',
        name: 'Object1',
        type: 'Object',
        properties: 'None',
        children: [
          {
            key: '/root/Object1/String1',
            name: 'String1',
            type: 'String',
            properties: 'None',
            qName: 'String1',
            children: [],
          },
          {
            key: '/root/Object1/Num1',
            name: 'Num1',
            type: 'Integer',
            properties: 'None',
            qName: 'Num1',
            children: [],
          },
        ],
        qName: 'Object1',
      },
      {
        key: '/root/Array1',
        name: 'Array1',
        type: 'Array',
        properties: 'None',
        children: [
          {
            key: '/root/Array1/*',
            name: '<ArrayItem>',
            type: 'Integer',
            properties: 'Repeating, ArrayItem',
            qName: '<ArrayItem>',
            children: [],
          },
        ],
        qName: 'Array1',
      },
      {
        key: '/root/ComplexArray1',
        name: 'ComplexArray1',
        type: 'Array',
        properties: 'None',
        children: [
          {
            key: '/root/ComplexArray1/*',
            name: '<ArrayItem>',
            type: 'Object',
            properties: 'Repeating, ArrayItem',
            children: [
              {
                key: '/root/ComplexArray1/*/F1',
                name: 'F1',
                type: 'Integer',
                properties: 'None',
                qName: 'F1',
                children: [],
              },
              {
                key: '/root/ComplexArray1/*/F2',
                name: 'F2',
                type: 'Integer',
                properties: 'None',
                qName: 'F2',
                children: [],
              },
            ],
            qName: '<ArrayItem>',
          },
        ],
        qName: 'ComplexArray1',
      },
      {
        key: '/root/ComplexArray2',
        name: 'ComplexArray2',
        type: 'Array',
        properties: 'None',
        children: [
          {
            key: '/root/ComplexArray2/*',
            name: '<ArrayItem>',
            type: 'Array',
            properties: 'Repeating, ArrayItem',
            children: [
              {
                key: '/root/ComplexArray2/*/*',
                name: '<ArrayItem>',
                type: 'Integer',
                properties: 'Repeating, ArrayItem',
                qName: '<ArrayItem>',
                children: [],
              },
            ],
            qName: '<ArrayItem>',
          },
        ],
        qName: 'ComplexArray2',
      },
      {
        key: '/root/Constants',
        name: 'Constants',
        type: 'Object',
        properties: 'None',
        children: [
          {
            key: '/root/Constants/String1',
            name: 'String1',
            type: 'String',
            properties: 'None',
            qName: 'String1',
            children: [],
          },
          {
            key: '/root/Constants/String2',
            name: 'String2',
            type: 'String',
            properties: 'None',
            qName: 'String2',
            children: [],
          },
          {
            key: '/root/Constants/Num',
            name: 'Num',
            type: 'Integer',
            properties: 'None',
            qName: 'Num',
            children: [],
          },
          {
            key: '/root/Constants/Decimal',
            name: 'Decimal',
            type: 'Decimal',
            properties: 'None',
            qName: 'Decimal',
            children: [],
          },
          {
            key: '/root/Constants/Bool',
            name: 'Bool',
            type: 'Bool',
            properties: 'None',
            qName: 'Bool',
            children: [],
          },
          {
            key: '/root/Constants/Null',
            name: 'Null',
            type: 'String',
            properties: 'Optional',
            qName: 'Null',
            children: [],
          },
        ],
        qName: 'Constants',
      },
      {
        key: '/root/ConstantArray',
        name: 'ConstantArray',
        type: 'Array',
        properties: 'None',
        children: [
          {
            key: '/root/ConstantArray/*',
            name: '<ArrayItem>',
            type: 'Integer',
            properties: 'Repeating, ArrayItem',
            qName: '<ArrayItem>',
            children: [],
          },
        ],
        qName: 'ConstantArray',
      },
      {
        key: '/root/ExpWithSourceNodes1',
        name: 'ExpWithSourceNodes1',
        type: 'String',
        properties: 'None',
        qName: 'ExpWithSourceNodes1',
        children: [],
      },
      {
        key: '/root/NodeAttrWithStatement',
        name: 'NodeAttrWithStatement',
        type: 'String',
        properties: 'None',
        qName: 'NodeAttrWithStatement',
        children: [],
      },
      {
        key: '/root/IfStatement-OK',
        name: 'IfStatement-OK',
        type: 'String',
        properties: 'None',
        qName: 'IfStatement-OK',
        children: [],
      },
      {
        key: '/root/IfStatement-Bad',
        name: 'IfStatement-Bad',
        type: 'Object',
        properties: 'None',
        children: [
          {
            key: '/root/IfStatement-Bad/Bad',
            name: 'Bad',
            type: 'String',
            properties: 'None',
            qName: 'Bad',
            children: [],
          },
          {
            key: '/root/IfStatement-Bad/Good',
            name: 'Good',
            type: 'String',
            properties: 'Optional',
            qName: 'Good',
            children: [],
          },
          {
            key: '/root/IfStatement-Bad/OK',
            name: 'OK',
            type: 'String',
            properties: 'Optional',
            qName: 'OK',
            children: [],
          },
        ],
        qName: 'IfStatement-Bad',
      },
      {
        key: '/root/T3',
        name: 'T3',
        type: 'String',
        properties: 'None',
        qName: 'T3',
        children: [],
      },
      {
        key: '/root/T2',
        name: 'T2',
        type: 'Integer',
        properties: 'None',
        qName: 'T2',
        children: [],
      },
      {
        key: '/root/ForLoop',
        name: 'ForLoop',
        type: 'Array',
        properties: 'None',
        children: [
          {
            key: '/root/ForLoop/*',
            name: '<ArrayItem>',
            type: 'Object',
            properties: 'Repeating, ArrayItem',
            children: [
              {
                key: '/root/ForLoop/*/prop1',
                name: 'prop1',
                type: 'Object',
                properties: 'None',
                children: [
                  {
                    key: '/root/ForLoop/*/prop1/TEL_NUMBER',
                    name: 'TEL_NUMBER',
                    type: 'String',
                    properties: 'None',
                    qName: 'TEL_NUMBER',
                    children: [],
                  },
                  {
                    key: '/root/ForLoop/*/prop1/TEL_EXTENS',
                    name: 'TEL_EXTENS',
                    type: 'String',
                    properties: 'None',
                    qName: 'TEL_EXTENS',
                    children: [],
                  },
                  {
                    key: '/root/ForLoop/*/prop1/Index',
                    name: 'Index',
                    type: 'Integer',
                    properties: 'None',
                    qName: 'Index',
                    children: [],
                  },
                ],
                qName: 'prop1',
              },
              {
                key: '/root/ForLoop/*/prop2',
                name: 'prop2',
                type: 'Object',
                properties: 'None',
                children: [
                  {
                    key: '/root/ForLoop/*/prop2/TEL_Country',
                    name: 'TEL_Country',
                    type: 'String',
                    properties: 'None',
                    qName: 'TEL_Country',
                    children: [],
                  },
                ],
                qName: 'prop2',
              },
            ],
            qName: '<ArrayItem>',
          },
        ],
        qName: 'ForLoop',
      },
      {
        key: '/root/TargetMadeUp',
        name: 'TargetMadeUp',
        type: 'Object',
        properties: 'None',
        children: [
          {
            key: '/root/TargetMadeUp/ManyManyArray',
            name: 'ManyManyArray',
            type: 'Object',
            properties: 'None',
            children: [
              {
                key: '/root/TargetMadeUp/ManyManyArray/*',
                name: '<ArrayItem>',
                type: 'Array',
                properties: 'Repeating, ArrayItem',
                children: [
                  {
                    key: '/root/TargetMadeUp/ManyManyArray/*/*',
                    name: '<ArrayItem>',
                    type: 'Array',
                    properties: 'Repeating, ArrayItem',
                    children: [
                      {
                        key: '/root/TargetMadeUp/ManyManyArray/*/*/TargetMadeUp_NeedAProp',
                        name: 'TargetMadeUp_NeedAProp',
                        type: 'Integer',
                        properties: 'None',
                        qName: 'TargetMadeUp_NeedAProp',
                        children: [],
                      },
                    ],
                    qName: '<ArrayItem>',
                  },
                ],
                qName: '<ArrayItem>',
              },
            ],
            qName: 'ManyManyArray',
          },
          {
            key: '/root/TargetMadeUp/ManySingleArray',
            name: 'ManySingleArray',
            type: 'Object',
            properties: 'None',
            children: [
              {
                key: '/root/TargetMadeUp/ManySingleArray/*',
                name: '<ArrayItem>',
                type: 'Array',
                properties: 'Repeating, ArrayItem',
                children: [
                  {
                    key: '/root/TargetMadeUp/ManySingleArray/*/TargetMadeUp_NeedAProp',
                    name: 'TargetMadeUp_NeedAProp',
                    type: 'Integer',
                    properties: 'None',
                    qName: 'TargetMadeUp_NeedAProp',
                    children: [],
                  },
                ],
                qName: '<ArrayItem>',
              },
            ],
            qName: 'ManySingleArray',
          },
        ],
        qName: 'TargetMadeUp',
      },
    ],
    qName: 'root',
  },
};

export default TargetSchemaJson;
