import type { IconProps } from './IconModel';
import { wrapIcon } from '@fluentui/react-icons';
import React from 'react';

const Any16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M3.373 5.09397C3.29 5.03397 3.191 5.00197 3.089 4.99997C2.987 4.99797 2.887 5.02797 2.802 5.08497C2.717 5.14197 2.652 5.22397 2.615 5.31897L0.680003 10.319C0.635003 10.442 0.640003 10.578 0.694003 10.697C0.748003 10.816 0.847003 10.91 0.969003 10.957C1.091 11.004 1.227 11.002 1.347 10.95C1.467 10.898 1.563 10.801 1.612 10.68L1.876 9.99897H4.126V9.93797L4.385 10.666C4.432 10.787 4.525 10.885 4.643 10.938C4.761 10.992 4.895 10.998 5.018 10.954C5.14 10.911 5.241 10.822 5.299 10.705C5.357 10.589 5.367 10.455 5.328 10.331L3.554 5.33097C3.52 5.23497 3.457 5.15097 3.374 5.09197L3.373 5.09397ZM2.263 8.99997L3.061 6.93797L3.793 8.99997H2.263Z"
        fill={primaryFill}
      />
      <path
        d="M6.929 5.24305C6.813 5.05005 6.583 4.95805 6.367 5.01805C6.15 5.07805 6 5.27505 6 5.50005V10.5001C6 10.7761 6.224 11.0001 6.5 11.0001C6.776 11.0001 7 10.7761 7 10.5001V7.30505L9.071 10.7571C9.187 10.9501 9.417 11.0421 9.633 10.9821C9.85 10.9221 10 10.7251 10 10.5001V5.50005C10 5.22405 9.776 5.00005 9.5 5.00005C9.224 5.00005 9 5.22405 9 5.50005V8.69505L6.929 5.24305Z"
        fill={primaryFill}
      />
      <path
        d="M11.243 5.07097C11.48 4.92897 11.787 5.00597 11.929 5.24297L13 7.02797L14.071 5.24297C14.213 5.00597 14.52 4.92897 14.757 5.07097C14.994 5.21297 15.071 5.51997 14.929 5.75697L13.5 8.13797V10.499C13.5 10.775 13.276 10.999 13 10.999C12.724 10.999 12.5 10.775 12.5 10.499V8.13797L11.071 5.75697C10.929 5.51997 11.006 5.21297 11.243 5.07097Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Any16Regular = wrapIcon(Any16RegularIcon, 'Any16Regular');

const Any16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M6.5 11.25C6.086 11.25 5.75 10.913 5.75 10.5V5.5C5.75 5.164 5.977 4.866 6.3 4.777C6.365 4.759 6.432 4.75 6.501 4.75C6.763 4.75 7.009 4.89 7.143 5.115L8.75 7.793V5.5C8.75 5.087 9.087 4.75 9.5 4.75C9.913 4.75 10.25 5.087 10.25 5.5V10.5C10.25 10.836 10.024 11.133 9.7 11.223C9.636 11.241 9.567 11.25 9.499 11.25C9.237 11.25 8.991 11.11 8.856 10.885L7.25 8.208V10.5C7.25 10.913 6.914 11.25 6.5 11.25Z"
        fill={primaryFill}
      />
      <path
        d="M13 11.25C12.587 11.25 12.25 10.913 12.25 10.5V8.20798L10.856 5.88598C10.753 5.71498 10.723 5.51298 10.772 5.31898C10.821 5.12398 10.942 4.96098 11.115 4.85698C11.231 4.78798 11.364 4.75098 11.5 4.75098C11.763 4.75098 12.009 4.89098 12.144 5.11598L13 6.54398L13.856 5.11498C13.991 4.88998 14.237 4.75098 14.5 4.75098C14.636 4.75098 14.769 4.78798 14.886 4.85698C15.057 4.95998 15.179 5.12298 15.228 5.31698C15.277 5.51198 15.247 5.71298 15.144 5.88598L13.75 8.20798V10.5C13.75 10.913 13.413 11.25 13 11.25Z"
        fill={primaryFill}
      />
      <path
        d="M3.69605 5.22303C3.59005 4.95303 3.31605 4.78003 3.00005 4.78003C2.68405 4.78003 2.41005 4.95403 2.30405 5.22203L0.30405 10.222C0.23005 10.408 0.23305 10.612 0.31105 10.796C0.39005 10.98 0.53705 11.122 0.72105 11.195C0.81005 11.231 0.90405 11.25 1.00005 11.25C1.30805 11.25 1.58105 11.065 1.69605 10.778L1.90705 10.25H4.09305L4.30405 10.778C4.41905 11.064 4.69205 11.25 5.00005 11.25C5.09605 11.25 5.18905 11.231 5.27805 11.196C5.46405 11.122 5.61005 10.979 5.68905 10.796C5.76705 10.611 5.77005 10.407 5.69605 10.222L3.69605 5.22303ZM2.50805 8.75003L3.00005 7.52003L3.49205 8.75003H2.50805Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Any16Filled = wrapIcon(Any16FilledIcon, 'Any16Filled');

const Array16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M5.93796 0.999991C6.14696 1.00299 6.33196 1.13599 6.40196 1.33299L8.17596 6.33299C8.26796 6.59299 8.13196 6.87899 7.87196 6.97099C7.61196 7.06299 7.32596 6.92699 7.23396 6.66699L6.99696 5.99999H4.72496L4.46196 6.67999C4.36196 6.93799 4.07296 7.06599 3.81496 6.96599C3.55696 6.86599 3.42996 6.57699 3.52896 6.31899L5.46496 1.31999C5.53996 1.12499 5.72896 0.996991 5.93796 0.999991ZM5.11196 4.99999H6.64196L5.90996 2.93799L5.11196 4.99999Z"
        fill={primaryFill}
      />
      <path
        d="M5.93796 8.99999C6.14696 9.00299 6.33196 9.13599 6.40196 9.33299L8.17596 14.333C8.26796 14.593 8.13196 14.879 7.87196 14.971C7.61196 15.063 7.32596 14.927 7.23396 14.667L6.99696 14H4.72496L4.46196 14.681C4.36196 14.938 4.07296 15.066 3.81496 14.967C3.55696 14.867 3.42996 14.578 3.52896 14.32L5.46396 9.31999C5.53896 9.12499 5.72796 8.99699 5.93696 8.99999H5.93796ZM5.11196 13H6.64196L5.90996 10.938L5.11196 13Z"
        fill={primaryFill}
      />
      <path
        d="M9.995 10.864C9.995 10.421 10.365 10 10.83 10C11.166 10 11.444 10.158 11.582 10.369C11.705 10.558 11.764 10.863 11.512 11.292C11.39 11.499 11.208 11.682 10.969 11.87C10.85 11.964 10.723 12.055 10.587 12.151L10.53 12.191C10.413 12.274 10.289 12.361 10.169 12.451C9.60299 12.877 8.996 13.461 8.996 14.498C8.996 14.774 9.22 14.998 9.496 14.998H12.189C12.465 14.998 12.689 14.774 12.689 14.498C12.689 14.222 12.465 13.998 12.189 13.998H10.093C10.215 13.716 10.448 13.493 10.77 13.25C10.872 13.173 10.978 13.098 11.09 13.019L11.105 13.009L11.164 12.967C11.301 12.87 11.447 12.766 11.589 12.654C11.872 12.431 12.162 12.158 12.374 11.798C12.79 11.09 12.778 10.373 12.42 9.82302C12.077 9.29602 11.465 8.99902 10.83 8.99902C9.741 8.99902 8.995 9.94202 8.995 10.863C8.995 11.139 9.219 11.363 9.495 11.363C9.771 11.363 9.995 11.139 9.995 10.863V10.864Z"
        fill={primaryFill}
      />
      <path
        d="M10 3.25501C9.81802 3.43401 9.62002 3.59601 9.41302 3.73401C9.18302 3.88701 8.87302 3.82501 8.72002 3.59501C8.56702 3.36501 8.62902 3.05501 8.85902 2.90201C9.45902 2.50201 9.90902 1.86201 10.012 1.39301C10.067 1.14301 10.3 0.978008 10.548 1.00201C10.802 1.02601 11 1.24001 11 1.50001V6.50001C11 6.77601 10.776 7.00001 10.5 7.00001C10.224 7.00001 10 6.77601 10 6.50001V3.25501Z"
        fill={primaryFill}
      />
      <path
        d="M14 5.5C14 5.224 13.776 5 13.5 5H12.5C12.224 5 12 5.224 12 5.5V6.5C12 6.776 12.224 7 12.5 7H12.756C12.648 7.248 12.497 7.447 12.283 7.55C12.034 7.669 11.929 7.968 12.05 8.217C12.136 8.396 12.315 8.5 12.5 8.5C12.573 8.5 12.647 8.484 12.717 8.45C13.559 8.046 13.99 7.054 14 5.503H13.997L14 5.5V5.5Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Array16Regular = wrapIcon(Array16RegularIcon, 'Array16Regular');

const Array16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M14 5.5C14 5.224 13.776 5 13.5 5H12.5C12.224 5 12 5.224 12 5.5V6.5C12 6.776 12.224 7 12.5 7H12.756C12.648 7.248 12.497 7.447 12.283 7.55C12.034 7.669 11.929 7.968 12.05 8.217C12.136 8.396 12.315 8.5 12.5 8.5C12.573 8.5 12.647 8.484 12.717 8.45C13.559 8.046 13.99 7.054 14 5.503H13.997L14 5.5V5.5Z"
        fill={primaryFill}
      />
      <path
        d="M10.301 0.751982C10.689 0.780982 10.995 1.10498 10.995 1.49998V6.49998C10.995 6.91398 10.659 7.24998 10.245 7.24998C9.83098 7.24998 9.49498 6.91398 9.49498 6.49998V3.80098C9.42998 3.84998 9.36398 3.89698 9.29698 3.94198C8.95198 4.17198 8.48698 4.07898 8.25698 3.73398C8.02698 3.38898 8.11998 2.92398 8.46498 2.69398C9.02498 2.32098 9.42598 1.73098 9.51198 1.33998C9.55898 1.12598 9.69298 0.952983 9.86798 0.850983C9.99598 0.776983 10.146 0.739982 10.301 0.751982V0.751982Z"
        fill={primaryFill}
      />
      <path
        d="M5.69602 0.749973C6.01002 0.753973 6.28702 0.953973 6.39202 1.24897L8.16602 6.24897C8.30502 6.63897 8.10002 7.06797 7.71002 7.20697C7.32002 7.34597 6.89102 7.14097 6.75202 6.75097L6.66302 6.49997H4.55302L4.44802 6.77097C4.29802 7.15697 3.86402 7.34897 3.47802 7.19997C3.09202 7.04997 2.90002 6.61597 3.04902 6.22997L4.98602 1.22897C5.09902 0.936973 5.38202 0.744973 5.69602 0.749973V0.749973ZM5.65502 3.65697L5.13502 4.99997H6.13202L5.65502 3.65697Z"
        fill={primaryFill}
      />
      <path
        d="M6.39299 9.249C6.28799 8.953 6.00999 8.754 5.69699 8.75C5.38299 8.746 5.09999 8.937 4.98699 9.229L3.05199 14.229C2.90199 14.615 3.09399 15.05 3.48099 15.199C3.86699 15.349 4.30199 15.157 4.45099 14.77L4.55599 14.499H6.66599L6.75499 14.75C6.89399 15.14 7.32199 15.345 7.71299 15.206C8.10299 15.067 8.30799 14.639 8.16899 14.248L6.39499 9.248L6.39299 9.249ZM5.13599 13L5.65599 11.657L6.13299 13H5.13599V13Z"
        fill={primaryFill}
      />
      <path
        d="M10.835 10.25C10.526 10.25 10.25 10.54 10.25 10.864C10.25 11.278 9.914 11.614 9.5 11.614C9.086 11.614 8.75 11.278 8.75 10.864C8.75 9.824 9.591 8.75 10.835 8.75C11.545 8.75 12.24 9.082 12.635 9.688C13.052 10.329 13.052 11.148 12.595 11.926C12.361 12.325 12.043 12.62 11.749 12.852C11.602 12.968 11.451 13.076 11.313 13.173L11.253 13.215C11.135 13.298 11.028 13.374 10.925 13.451C10.785 13.557 10.668 13.654 10.574 13.75H12.194C12.608 13.75 12.944 14.086 12.944 14.5C12.944 14.914 12.608 15.25 12.194 15.25H9.501C9.087 15.25 8.751 14.914 8.751 14.5C8.751 13.342 9.439 12.693 10.024 12.253C10.147 12.16 10.275 12.07 10.392 11.987L10.448 11.947C10.584 11.851 10.706 11.763 10.82 11.674C11.048 11.494 11.203 11.335 11.302 11.165C11.513 10.806 11.442 10.603 11.378 10.505C11.292 10.372 11.097 10.25 10.836 10.25H10.835Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Array16Filled = wrapIcon(Array16FilledIcon, 'Array16Filled');

const Binary16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M6 11C5.47 11 4.961 10.789 4.586 10.414C4.211 10.039 4 9.53 4 9V6C4 5.47 4.211 4.961 4.586 4.586C4.961 4.211 5.47 4 6 4C6.53 4 7.039 4.211 7.414 4.586C7.789 4.961 8 5.47 8 6V9C8 9.53 7.789 10.039 7.414 10.414C7.039 10.789 6.53 11 6 11ZM6 5C5.735 5 5.48 5.105 5.293 5.293C5.105 5.481 5 5.735 5 6V9C5 9.265 5.105 9.52 5.293 9.707C5.481 9.895 5.735 10 6 10C6.265 10 6.52 9.895 6.707 9.707C6.895 9.519 7 9.265 7 9V6C7 5.735 6.895 5.48 6.707 5.293C6.519 5.105 6.265 5 6 5Z"
        fill={primaryFill}
      />
      <path
        d="M10.4889 11C10.3559 11 10.2289 10.947 10.1349 10.854C10.0409 10.76 9.98895 10.633 9.98895 10.5V5.61501C9.71695 5.78201 9.41995 5.90701 9.10995 5.98501C8.98295 6.01401 8.84895 5.99101 8.73795 5.92301C8.62695 5.85401 8.54695 5.74501 8.51495 5.61801C8.48295 5.49101 8.50295 5.35701 8.56895 5.24401C8.63495 5.13101 8.74195 5.04901 8.86795 5.01401C9.34695 4.89001 9.77195 4.61001 10.0749 4.21901C10.1349 4.13001 10.2219 4.06301 10.3229 4.02801C10.4239 3.99201 10.5339 3.99001 10.6359 4.02101C10.7379 4.05201 10.8279 4.11601 10.8909 4.20201C10.9549 4.28801 10.9889 4.39201 10.9889 4.49901V10.499C10.9889 10.632 10.9359 10.759 10.8429 10.853C10.7489 10.947 10.6219 10.999 10.4889 10.999V11Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Binary16Regular = wrapIcon(Binary16RegularIcon, 'Binary16Regular');

const Binary16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M6 5.5C6.134 5.5 6.259 5.552 6.354 5.646C6.448 5.74 6.5 5.866 6.5 6V9C6.5 9.134 6.448 9.259 6.354 9.354C6.26 9.448 6.134 9.5 6 9.5C5.866 9.5 5.741 9.448 5.646 9.354C5.552 9.26 5.5 9.134 5.5 9V6C5.5 5.866 5.552 5.741 5.646 5.646C5.74 5.552 5.866 5.5 6 5.5ZM6 4C5.47 4 4.961 4.211 4.586 4.586C4.211 4.961 4 5.47 4 6V9C4 9.53 4.211 10.039 4.586 10.414C4.961 10.789 5.47 11 6 11C6.53 11 7.039 10.789 7.414 10.414C7.789 10.039 8 9.53 8 9V6C8 5.47 7.789 4.961 7.414 4.586C7.039 4.211 6.53 4 6 4Z"
        fill={primaryFill}
      />
      <path
        d="M10.251 4.00403C10.009 4.00403 9.77404 4.12203 9.63104 4.32703C9.62705 4.33203 9.25704 4.85003 8.56804 5.02203C8.16604 5.12303 7.92204 5.53003 8.02304 5.93203C8.10804 6.27203 8.41404 6.50003 8.75004 6.50003C8.81004 6.50003 8.87204 6.49303 8.93304 6.47703C9.13905 6.42603 9.32804 6.35803 9.50104 6.28003V10.249C9.50104 10.663 9.83704 10.999 10.251 10.999C10.665 10.999 11.001 10.663 11.001 10.249V4.75003C11.001 4.42303 10.786 4.13703 10.474 4.03903C10.401 4.01603 10.326 4.00503 10.252 4.00503L10.251 4.00403Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Binary16Filled = wrapIcon(Binary16FilledIcon, 'Binary16Filled');

const Decimal16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M7 11C6.46957 11 5.96086 10.7893 5.58579 10.4142C5.21071 10.0391 5 9.53043 5 9V6C5 5.46957 5.21071 4.96086 5.58579 4.58579C5.96086 4.21071 6.46957 4 7 4C7.53043 4 8.03914 4.21071 8.41421 4.58579C8.78929 4.96086 9 5.46957 9 6V9C9 9.53043 8.78929 10.0391 8.41421 10.4142C8.03914 10.7893 7.53043 11 7 11ZM7 5C6.73478 5 6.48043 5.10536 6.29289 5.29289C6.10536 5.48043 6 5.73478 6 6V9C6 9.26522 6.10536 9.51957 6.29289 9.70711C6.48043 9.89464 6.73478 10 7 10C7.26522 10 7.51957 9.89464 7.70711 9.70711C7.89464 9.51957 8 9.26522 8 9V6C8 5.73478 7.89464 5.48043 7.70711 5.29289C7.51957 5.10536 7.26522 5 7 5Z"
        fill={primaryFill}
      />
      <path
        d="M12 11C11.4696 11 10.9609 10.7893 10.5858 10.4142C10.2107 10.0391 10 9.53043 10 9V6C10 5.46957 10.2107 4.96086 10.5858 4.58579C10.9609 4.21071 11.4696 4 12 4C12.5304 4 13.0391 4.21071 13.4142 4.58579C13.7893 4.96086 14 5.46957 14 6V9C14 9.53043 13.7893 10.0391 13.4142 10.4142C13.0391 10.7893 12.5304 11 12 11ZM12 5C11.7348 5 11.4804 5.10536 11.2929 5.29289C11.1054 5.48043 11 5.73478 11 6V9C11 9.26522 11.1054 9.51957 11.2929 9.70711C11.4804 9.89464 11.7348 10 12 10C12.2652 10 12.5196 9.89464 12.7071 9.70711C12.8946 9.51957 13 9.26522 13 9V6C13 5.73478 12.8946 5.48043 12.7071 5.29289C12.5196 5.10536 12.2652 5 12 5Z"
        fill={primaryFill}
      />
      <path
        d="M3.5 11C3.77614 11 4 10.7761 4 10.5C4 10.2239 3.77614 10 3.5 10C3.22386 10 3 10.2239 3 10.5C3 10.7761 3.22386 11 3.5 11Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Decimal16Regular = wrapIcon(Decimal16RegularIcon, 'Decimal16Regular');

const Decimal16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M6.5 5.5C7.051 5.5 7.5 5.949 7.5 6.5V9.5C7.5 10.051 7.051 10.5 6.5 10.5C5.949 10.5 5.5 10.051 5.5 9.5V6.5C5.5 5.949 5.949 5.5 6.5 5.5ZM6.5 4C5.122 4 4 5.122 4 6.5V9.5C4 10.878 5.122 12 6.5 12C7.878 12 9 10.878 9 9.5V6.5C9 5.122 7.878 4 6.5 4Z"
        fill={primaryFill}
      />
      <path
        d="M12.5 5.5C13.051 5.5 13.5 5.949 13.5 6.5V9.5C13.5 10.051 13.051 10.5 12.5 10.5C11.949 10.5 11.5 10.051 11.5 9.5V6.5C11.5 5.949 11.949 5.5 12.5 5.5ZM12.5 4C11.122 4 10 5.122 10 6.5V9.5C10 10.878 11.122 12 12.5 12C13.878 12 15 10.878 15 9.5V6.5C15 5.122 13.878 4 12.5 4Z"
        fill={primaryFill}
      />
      <path
        d="M2 12C2.55228 12 3 11.5523 3 11C3 10.4477 2.55228 10 2 10C1.44772 10 1 10.4477 1 11C1 11.5523 1.44772 12 2 12Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Decimal16Filled = wrapIcon(Decimal16FilledIcon, 'Decimal16Filled');

const Integer16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M13 7.00002C13.1808 7.00006 13.3582 6.95108 13.5134 6.85829C13.6686 6.7655 13.7957 6.63238 13.8812 6.47308C13.9668 6.31378 14.0075 6.13428 13.9991 5.95366C13.9907 5.77305 13.9336 5.59809 13.8336 5.4474C13.7337 5.2967 13.5948 5.17592 13.4317 5.0979C13.2686 5.01989 13.0874 4.98755 12.9074 5.00434C12.7273 5.02112 12.5552 5.08641 12.4093 5.19324C12.2635 5.30007 12.1493 5.44445 12.079 5.61102C12.0451 5.71512 11.9819 5.80722 11.8969 5.87623C11.8119 5.94525 11.7088 5.98823 11.6 6.00002C11.524 6.00665 11.4475 5.99516 11.3769 5.96649C11.3062 5.93782 11.2433 5.89279 11.1934 5.8351C11.1436 5.77741 11.1081 5.7087 11.0899 5.63463C11.0718 5.56056 11.0714 5.48324 11.089 5.40902C11.1803 5.11405 11.3387 4.84423 11.5517 4.6207C11.7648 4.39718 12.0267 4.22602 12.3169 4.12063C12.6071 4.01525 12.9179 3.9785 13.2247 4.01327C13.5315 4.04804 13.8261 4.15337 14.0854 4.32103C14.3447 4.48869 14.5617 4.71411 14.7193 4.97964C14.8769 5.24517 14.9709 5.54358 14.9939 5.85151C15.0169 6.15944 14.9683 6.46851 14.8519 6.75451C14.7355 7.04052 14.5545 7.29568 14.323 7.50002C14.5545 7.70435 14.7355 7.95952 14.8519 8.24552C14.9683 8.53152 15.0169 8.8406 14.9939 9.14852C14.9709 9.45645 14.8769 9.75487 14.7193 10.0204C14.5617 10.2859 14.3447 10.5113 14.0854 10.679C13.8261 10.8467 13.5315 10.952 13.2247 10.9868C12.9179 11.0215 12.6071 10.9848 12.3169 10.8794C12.0267 10.774 11.7648 10.6029 11.5517 10.3793C11.3387 10.1558 11.1803 9.88599 11.089 9.59102C11.0714 9.51679 11.0718 9.43947 11.0899 9.3654C11.1081 9.29133 11.1436 9.22263 11.1934 9.16494C11.2433 9.10725 11.3062 9.06222 11.3769 9.03355C11.4475 9.00488 11.524 8.99338 11.6 9.00002C11.7089 9.01188 11.8121 9.05501 11.8971 9.12421C11.9821 9.19341 12.0453 9.28573 12.079 9.39002C12.1495 9.55645 12.2637 9.70066 12.4096 9.80733C12.5556 9.91399 12.7277 9.97911 12.9076 9.99576C13.0876 10.0124 13.2687 9.97998 13.4317 9.90191C13.5948 9.82383 13.7336 9.70303 13.8334 9.55236C13.9332 9.40169 13.9904 9.22678 13.9987 9.04623C14.0071 8.86568 13.9663 8.68624 13.8808 8.52699C13.7953 8.36775 13.6683 8.23465 13.5132 8.14186C13.3581 8.04907 13.1807 8.00005 13 8.00002C12.8674 8.00002 12.7402 7.94734 12.6464 7.85357C12.5526 7.7598 12.5 7.63263 12.5 7.50002C12.5 7.36741 12.5526 7.24023 12.6464 7.14646C12.7402 7.0527 12.8674 7.00002 13 7.00002Z"
        fill={primaryFill}
      />
      <path
        d="M9.5 11H6.5C6.36739 11 6.24021 10.9473 6.14645 10.8536C6.05268 10.7598 6 10.6326 6 10.5C6.03449 9.86954 6.22553 9.2576 6.55586 8.7195C6.8862 8.1814 7.34541 7.73409 7.892 7.418C8.579 6.882 9 6.526 9 6C9 5.73478 8.89464 5.48043 8.70711 5.29289C8.51957 5.10536 8.26522 5 8 5C7.73478 5 7.48043 5.10536 7.29289 5.29289C7.10536 5.48043 7 5.73478 7 6C7 6.13261 6.94732 6.25979 6.85355 6.35355C6.75979 6.44732 6.63261 6.5 6.5 6.5C6.36739 6.5 6.24021 6.44732 6.14645 6.35355C6.05268 6.25979 6 6.13261 6 6C6 5.46957 6.21071 4.96086 6.58579 4.58579C6.96086 4.21071 7.46957 4 8 4C8.53043 4 9.03914 4.21071 9.41421 4.58579C9.78929 4.96086 10 5.46957 10 6C10 7.041 9.241 7.633 8.507 8.207C7.82489 8.6129 7.30975 9.24859 7.054 10H9.5C9.63261 10 9.75979 10.0527 9.85355 10.1464C9.94732 10.2402 10 10.3674 10 10.5C10 10.6326 9.94732 10.7598 9.85355 10.8536C9.75979 10.9473 9.63261 11 9.5 11Z"
        fill={primaryFill}
      />
      <path
        d="M3.5 11C3.36739 11 3.24022 10.9473 3.14645 10.8536C3.05268 10.7598 3 10.6326 3 10.5V5.615C2.72758 5.78244 2.43116 5.90722 2.121 5.985C1.99358 6.01367 1.86 5.99135 1.74883 5.92281C1.63766 5.85427 1.55772 5.74495 1.5261 5.61823C1.49449 5.49151 1.51371 5.35745 1.57966 5.24472C1.64561 5.13199 1.75305 5.04954 1.879 5.015C2.35834 4.89113 2.78292 4.61148 3.086 4.22C3.14598 4.13143 3.23279 4.06443 3.33367 4.02884C3.43454 3.99326 3.54418 3.99096 3.64646 4.0223C3.74873 4.05363 3.83827 4.11694 3.9019 4.20292C3.96554 4.28891 3.99992 4.39303 4 4.5V10.5C4 10.6326 3.94732 10.7598 3.85355 10.8536C3.75979 10.9473 3.63261 11 3.5 11Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Integer16Regular = wrapIcon(Integer16RegularIcon, 'Integer16Regular');

const Integer16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M3.251 11.25C2.837 11.25 2.501 10.914 2.501 10.5V6.04001C2.299 6.13601 2.084 6.20901 1.859 6.24201C1.452 6.29701 1.068 6.01801 1.008 5.60801C0.948 5.19801 1.232 4.81701 1.642 4.75701C1.959 4.71101 2.447 4.28701 2.677 4.01701C2.881 3.77701 3.215 3.68801 3.508 3.79601C3.803 3.90401 4.001 4.18501 4.001 4.49901V10.499C4.001 10.913 3.665 11.249 3.251 11.249V11.25Z"
        fill={primaryFill}
      />
      <path
        d="M9.50098 11.25H6.50098C6.08698 11.25 5.75098 10.914 5.75098 10.5C5.75098 8.772 6.89998 7.876 7.73898 7.221C8.38498 6.717 8.75098 6.411 8.75098 6C8.75098 5.589 8.41498 5.25 8.00098 5.25C7.58698 5.25 7.25098 5.587 7.25098 6C7.25098 6.413 6.91498 6.75 6.50098 6.75C6.08698 6.75 5.75098 6.414 5.75098 6C5.75098 4.76 6.75998 3.75 8.00098 3.75C9.24198 3.75 10.251 4.76 10.251 6C10.251 7.163 9.40698 7.822 8.66198 8.403C8.12198 8.825 7.63498 9.205 7.39898 9.75H9.50098C9.91498 9.75 10.251 10.086 10.251 10.5C10.251 10.914 9.91498 11.25 9.50098 11.25Z"
        fill={primaryFill}
      />
      <path
        d="M13.251 11.25C12.01 11.25 11.001 10.24 11.001 9C11.001 8.586 11.337 8.25 11.751 8.25C12.165 8.25 12.501 8.586 12.501 9C12.501 9.414 12.837 9.75 13.251 9.75C13.665 9.75 14.001 9.413 14.001 9C14.001 8.587 13.665 8.25 13.251 8.25C12.837 8.25 12.501 7.914 12.501 7.5C12.501 7.086 12.837 6.75 13.251 6.75C13.665 6.75 14.001 6.413 14.001 6C14.001 5.587 13.665 5.25 13.251 5.25C12.837 5.25 12.501 5.587 12.501 6C12.501 6.413 12.165 6.75 11.751 6.75C11.337 6.75 11.001 6.414 11.001 6C11.001 4.76 12.01 3.75 13.251 3.75C14.492 3.75 15.501 4.76 15.501 6C15.501 6.576 15.284 7.102 14.927 7.5C15.284 7.898 15.501 8.424 15.501 9C15.501 10.24 14.492 11.25 13.251 11.25Z"
        fill={primaryFill}
      />
    </>
  );
};

export const Integer16Filled = wrapIcon(Integer16FilledIcon, 'Integer16Filled');

const String16RegularIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M9.793 6.75897C9.806 7.14297 9.693 7.52097 9.473 7.83597C9.635 7.94997 9.771 8.09497 9.874 8.26397C10.045 8.56097 10.13 8.89897 10.12 9.24097C10.136 9.53897 10.07 9.83497 9.929 10.097C9.788 10.359 9.577 10.578 9.32 10.729C8.992 10.909 8.624 11.002 8.25 11H6.5C6.367 11 6.24 10.947 6.146 10.854C6.052 10.76 6 10.633 6 10.5V5.49997C6 5.36697 6.053 5.23997 6.146 5.14597C6.24 5.05197 6.367 4.99997 6.5 4.99997H8C8.351 4.98897 8.699 5.06797 9.011 5.22997C9.249 5.36297 9.444 5.56097 9.575 5.79997C9.727 6.09597 9.802 6.42597 9.793 6.75897ZM8.697 6.27797C8.657 6.20297 8.596 6.14097 8.521 6.09997C8.358 6.02397 8.179 5.98997 8 5.99997H7V7.49997H8.022C8.196 7.50297 8.369 7.46097 8.522 7.37797C8.622 7.31097 8.701 7.21797 8.749 7.10797C8.798 6.99797 8.814 6.87697 8.797 6.75897C8.805 6.59297 8.77 6.42697 8.697 6.27797ZM8.186 8.49997H7V9.99997H8.25C8.447 9.99997 8.64 9.95297 8.814 9.86097C8.919 9.79797 9.004 9.70497 9.057 9.59397C9.11 9.48297 9.13 9.35897 9.114 9.23797C9.123 9.07897 9.088 8.92097 9.014 8.78097C8.966 8.70297 8.897 8.63997 8.814 8.59997C8.615 8.52097 8.4 8.48697 8.186 8.49997Z"
        fill={primaryFill}
      />
      <path
        d="M5.46399 10.314L3.46399 5.31401C3.31399 4.93301 2.68699 4.93301 2.53599 5.31401L0.535991 10.314C0.432991 10.57 0.556991 10.861 0.813991 10.963C1.06899 11.067 1.36099 10.941 1.46299 10.685L1.73699 9.99901H4.26099L4.53499 10.685C4.61299 10.88 4.80099 10.999 4.99899 10.999C5.06099 10.999 5.12399 10.987 5.18499 10.963C5.44199 10.86 5.56599 10.569 5.46299 10.314H5.46399ZM2.13799 9.00001L2.99999 6.84701L3.86199 9.00001H2.13899H2.13799Z"
        fill={primaryFill}
      />
      <path
        d="M13.375 11C11.865 11 11 9.906 11 8C11 6.094 11.865 5 13.375 5C14.346 5 15.087 5.483 15.461 6.361C15.569 6.616 15.451 6.909 15.197 7.017C14.94 7.125 14.649 7.006 14.541 6.753C14.322 6.238 13.951 5.999 13.375 5.999C12.463 5.999 12 6.672 12 7.999C12 9.326 12.463 9.999 13.375 9.999C13.935 9.999 14.299 9.773 14.521 9.29C14.636 9.037 14.936 8.93 15.184 9.045C15.435 9.16 15.544 9.457 15.429 9.708C15.04 10.553 14.33 10.999 13.374 10.999L13.375 11Z"
        fill={primaryFill}
      />
    </>
  );
};

export const String16Regular = wrapIcon(String16RegularIcon, 'String16Regular');

const String16FilledIcon = (props: IconProps) => {
  const { fill: primaryFill = 'currentColor', className } = props;
  return React.createElement(
    'svg',
    Object.assign({}, props, {
      width: 16,
      height: 16,
      viewBox: '0 0 16 16',
      xmlns: 'http://www.w3.org/2000/svg',
      className: className,
    }),
    <>
      <path
        d="M9.8 7.78002C9.97 7.46702 10.055 7.11102 10.043 6.76502C10.053 6.39202 9.968 6.01902 9.795 5.67902C9.641 5.39802 9.412 5.16702 9.126 5.00802C8.802 4.83902 8.437 4.74902 8.007 4.74902H6.5C6.3 4.74902 6.111 4.82702 5.97 4.96902C5.829 5.11102 5.75 5.29902 5.75 5.49902V10.499C5.75 10.699 5.828 10.888 5.97 11.029C6.112 11.17 6.3 11.249 6.5 11.249H8.262C8.674 11.249 9.081 11.145 9.447 10.943C9.743 10.77 9.985 10.518 10.15 10.214C10.312 9.91002 10.388 9.56902 10.371 9.24602C10.382 8.85702 10.285 8.47402 10.089 8.13202C10.01 8.00202 9.912 7.88302 9.801 7.77802L9.8 7.78002ZM8.521 7.00702C8.492 7.07302 8.444 7.13002 8.405 7.15802C8.293 7.21802 8.167 7.25002 8.024 7.25002H7.251V6.25002L8.064 6.24802C8.184 6.24802 8.305 6.27502 8.401 6.31902C8.433 6.33602 8.461 6.36302 8.473 6.38802C8.528 6.49802 8.553 6.62202 8.55 6.79402C8.561 6.86602 8.55 6.94002 8.521 7.00602V7.00702ZM7.25 8.74902L8.274 8.74702C8.429 8.74702 8.58 8.77602 8.705 8.82402C8.743 8.84302 8.777 8.87402 8.794 8.89902C8.847 8.99802 8.871 9.11002 8.866 9.27002C8.876 9.34402 8.864 9.41802 8.831 9.48702C8.8 9.55202 8.749 9.60802 8.697 9.64002C8.561 9.71102 8.409 9.74902 8.25 9.74902H7.25V8.74802V8.74902Z"
        fill={primaryFill}
      />
      <path
        d="M3.69605 5.22303C3.59005 4.95303 3.31605 4.78003 3.00005 4.78003C2.68405 4.78003 2.41005 4.95403 2.30405 5.22203L0.30405 10.222C0.23005 10.408 0.23305 10.612 0.31105 10.796C0.39005 10.98 0.53705 11.122 0.72105 11.195C0.81005 11.231 0.90405 11.25 1.00005 11.25C1.30805 11.25 1.58105 11.065 1.69605 10.778L1.90705 10.25H4.09305L4.30405 10.778C4.41905 11.064 4.69205 11.25 5.00005 11.25C5.09605 11.25 5.18905 11.231 5.27805 11.196C5.46405 11.122 5.61005 10.979 5.68905 10.796C5.76705 10.611 5.77005 10.407 5.69605 10.222L3.69605 5.22303ZM2.50805 8.75003L3.00005 7.52003L3.49205 8.75003H2.50805Z"
        fill={primaryFill}
      />
      <path
        d="M15.29 8.819C15.19 8.773 15.085 8.75 14.976 8.75C14.683 8.75 14.415 8.922 14.294 9.187C14.112 9.582 13.838 9.75 13.375 9.75C13.097 9.75 12.25 9.75 12.25 8C12.25 6.25 13.097 6.25 13.375 6.25C13.852 6.25 14.132 6.43 14.312 6.853C14.43 7.129 14.701 7.308 15.001 7.308C15.102 7.308 15.2 7.287 15.296 7.247C15.676 7.085 15.853 6.643 15.692 6.264C15.276 5.287 14.454 4.75 13.376 4.75C11.732 4.75 10.751 5.965 10.751 8C10.751 10.035 11.732 11.25 13.376 11.25C14.437 11.25 15.226 10.753 15.658 9.813C15.741 9.63 15.749 9.427 15.679 9.24C15.61 9.052 15.471 8.902 15.29 8.819Z"
        fill={primaryFill}
      />
    </>
  );
};

export const String16Filled = wrapIcon(String16FilledIcon, 'String16Filled');
