{
  "name": "logic-apps-vscode-extension",
  "displayName": "Azure Logic Apps (Standard)",
  "version": "0.2.54",
  "aiKey": "setInGitHubBuild",
  "repository": "https://github.com/Azure/logic_apps_designer",
  "main": "main.js",
  "engines": {
    "vscode": "^1.64.0"
  },
  "contributes": {
    "breakpoints": [
      {
        "language": "json"
      }
    ],
    "commands": [
      {
        "command": "logicAppsExtension.selectSubscriptions",
        "title": "Select Subscriptions...",
        "icon": {
          "light": "assets/light/filter.svg",
          "dark": "assets/dark/filter.svg"
        }
      },
      {
        "command": "logicAppsExtension.openDesigner",
        "title": "Open New Designer",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.loadMore",
        "title": "Load More",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.viewContent",
        "title": "View Content",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.createNewProject",
        "title": "Create New Project...",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/CreateNewProject.svg",
          "dark": "assets/dark/CreateNewProject.svg"
        }
      },
      {
        "command": "logicAppsExtension.createCodeless",
        "title": "Create Workflow...",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/Codeless.svg",
          "dark": "assets/dark/Codeless.svg"
        }
      },
      {
        "command": "logicAppsExtension.deploy",
        "title": "Deploy to Logic App...",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/deploy.svg",
          "dark": "assets/dark/deploy.svg"
        }
      },
      {
        "command": "logicAppsExtension.deploySlot",
        "title": "Deploy to Slot...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.createLogicApp",
        "title": "Create Logic App in Azure...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.createLogicAppAdvanced",
        "title": "Create Logic App in Azure... (Advanced)",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.startLogicApp",
        "title": "Start",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.stopLogicApp",
        "title": "Stop",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.restartLogicApp",
        "title": "Restart",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.deleteLogicApp",
        "title": "Delete Logic App...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.pickProcess",
        "title": "Pick Process",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.refresh",
        "title": "Refresh",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/refresh.svg",
          "dark": "assets/dark/refresh.svg"
        }
      },
      {
        "command": "logicAppsExtension.openOverview",
        "title": "Overview",
        "category": "Azure Logic Apps"
      },
      {
        "command": "azureLogicAppsStandard.exportLogicApp",
        "title": "Export Logic App...",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/export.svg",
          "dark": "assets/dark/export.svg"
        }
      },
      {
        "command": "logicAppsExtension.switchToDotnetProject",
        "title": "Convert to NuGet-based Logic App project",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.redeploy",
        "title": "Redeploy",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.openInPortal",
        "title": "Open in Portal",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.browseWebsite",
        "title": "Browse Website",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.viewProperties",
        "title": "View Properties",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.createSlot",
        "title": "Create Slot...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.deleteSlot",
        "title": "Delete Slot...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.viewDeploymentLogs",
        "title": "View Deployment Logs",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.startStreamingLogs",
        "title": "Start Streaming Logs",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.stopStreamingLogs",
        "title": "Stop Streaming Logs",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.reviewValidation",
        "title": "Review Validation",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.swapSlot",
        "title": "Swap Slot...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.toggleAppSettingVisibility",
        "title": "Toggle App Setting Visibility.",
        "category": "Azure Logic Apps",
        "icon": {
          "light": "assets/light/visible.svg",
          "dark": "assets/dark/visible.svg"
        }
      },
      {
        "command": "logicAppsExtension.appSettings.add",
        "title": "Add New Setting...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.delete",
        "title": "Delete Setting...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.download",
        "title": "Download Remote Settings...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.edit",
        "title": "Edit Setting...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.rename",
        "title": "Rename Setting...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.toggleSlotSetting",
        "title": "Toggle as Slot Setting",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.appSettings.upload",
        "title": "Upload Local Settings...",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.switchDebugMode",
        "title": "Update debug mode for stateless workflow",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.useSQLStorage",
        "title": "Use SQL storage for your Logic App project",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.configureWebhookRedirectEndpoint",
        "title": "Configure Webhook Redirect Endpoint",
        "category": "Azure Logic Apps"
      },
      {
        "command": "logicAppsExtension.enableAzureConnectors",
        "title": "Use Connectors from Azure",
        "category": "Azure Logic Apps"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "azure",
          "title": "Azure",
          "icon": "resources/azure.svg"
        }
      ]
    },
    "views": {
      "azure": [
        {
          "id": "newAzLogicApps",
          "name": "New Logic Apps (Standard)",
          "when": "config.logicAppsExtension.showExplorer == true"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "logicAppsExtension.createNewProject",
          "when": "view == newAzLogicApps",
          "group": "navigation@1"
        },
        {
          "command": "logicAppsExtension.createCodeless",
          "when": "view == newAzLogicApps",
          "group": "navigation@2"
        },
        {
          "command": "logicAppsExtension.deploy",
          "when": "view == newAzLogicApps",
          "group": "navigation@3"
        },
        {
          "command": "azureLogicAppsStandard.exportLogicApp",
          "when": "view == newAzLogicApps",
          "group": "navigation@4"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps",
          "group": "navigation@5"
        }
      ],
      "view/item/context": [
        {
          "command": "logicAppsExtension.selectSubscriptions",
          "when": "view == newAzLogicApps && viewItem == azureextensionui.azureSubscription",
          "group": "inline"
        },
        {
          "command": "logicAppsExtension.createLogicApp",
          "when": "view == newAzLogicApps && viewItem == azureextensionui.azureSubscription",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.createLogicAppAdvanced",
          "when": "view == newAzLogicApps && viewItem == azureextensionui.azureSubscription",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.deleteLogicApp",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsProductionSlot",
          "group": "2@5"
        },
        {
          "command": "logicAppsExtension.openDesigner",
          "when": "view == newAzLogicApps && viewItem =~ /Remote;.*;Workflow;/i",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.viewContent",
          "when": "view == newAzLogicApps && viewItem =~ /Remote;.*;Workflow;/i",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.deploy",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsProductionSlot",
          "group": "3@1"
        },
        {
          "command": "logicAppsExtension.deploySlot",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsSlot",
          "group": "3@2"
        },
        {
          "command": "logicAppsExtension.startLogicApp",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.stopLogicApp",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "2@2"
        },
        {
          "command": "logicAppsExtension.restartLogicApp",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "2@3"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == azureextensionui.azureSubscription",
          "group": "3@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "6@2"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsSlots",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem =~ /Workflows;/i",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == applicationSettings",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == azFuncProxies",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem =~ /^deployments(C|Unc)onnected$/",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == siteFiles",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == logFiles",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "view == newAzLogicApps && viewItem == folder",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.openOverview",
          "when": "view == newAzLogicApps && viewItem =~ /Remote;.*;Workflow;/i",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.redeploy",
          "when": "view == newAzLogicApps && viewItem =~ /^deployment//",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.openInPortal",
          "when": "view == newAzLogicApps && viewItem == azureextensionui.azureSubscription",
          "group": "2@1"
        },
        {
          "command": "logicAppsExtension.openInPortal",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsProductionSlot",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.openInPortal",
          "when": "view == newAzLogicApps && viewItem =~ /^deployment//",
          "group": "1@3"
        },
        {
          "command": "logicAppsExtension.browseWebsite",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.viewProperties",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "6@1"
        },
        {
          "command": "logicAppsExtension.createSlot",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsSlots",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.deleteSlot",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsSlot",
          "group": "2@5"
        },
        {
          "command": "logicAppsExtension.viewDeploymentLogs",
          "when": "view == newAzLogicApps && viewItem =~ /^deployment//",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.startStreamingLogs",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "4@1"
        },
        {
          "command": "logicAppsExtension.stopStreamingLogs",
          "when": "view == newAzLogicApps && viewItem =~ /^azLogicApps(Production|)Slot$/",
          "group": "4@2"
        },
        {
          "command": "logicAppsExtension.swapSlot",
          "when": "view == newAzLogicApps && viewItem == azLogicAppsSlot",
          "group": "2@4"
        },
        {
          "command": "logicAppsExtension.toggleAppSettingVisibility",
          "when": "view == newAzLogicApps && viewItem == applicationSettingItem",
          "group": "inline"
        },
        {
          "command": "logicAppsExtension.appSettings.add",
          "when": "view == newAzLogicApps && viewItem == applicationSettings",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.appSettings.delete",
          "when": "view == newAzLogicApps && viewItem == applicationSettingItem",
          "group": "1@3"
        },
        {
          "command": "logicAppsExtension.appSettings.download",
          "when": "view == newAzLogicApps && viewItem == applicationSettings",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.appSettings.edit",
          "when": "view == newAzLogicApps && viewItem == applicationSettingItem",
          "group": "1@1"
        },
        {
          "command": "logicAppsExtension.appSettings.rename",
          "when": "view == newAzLogicApps && viewItem == applicationSettingItem",
          "group": "1@2"
        },
        {
          "command": "logicAppsExtension.appSettings.toggleSlotSetting",
          "when": "view == newAzLogicApps && viewItem == applicationSettingItem",
          "group": "1@4"
        },
        {
          "command": "logicAppsExtension.appSettings.upload",
          "when": "view == newAzLogicApps && viewItem == applicationSettings",
          "group": "1@3"
        }
      ],
      "explorer/context": [
        {
          "command": "logicAppsExtension.deploy",
          "when": "explorerResourceIsFolder == true",
          "group": "zzz_LogicApptools@1"
        },
        {
          "command": "logicAppsExtension.openOverview",
          "when": "resourceFilename==workflow.json",
          "group": "navigation@1"
        },
        {
          "command": "logicAppsExtension.openDesigner",
          "when": "resourceFilename==workflow.json",
          "group": "navigation@3"
        },
        {
          "command": "logicAppsExtension.switchToDotnetProject",
          "when": "explorerResourceIsRoot == true",
          "group": "zzz_LogicApptools@3"
        },
        {
          "command": "logicAppsExtension.reviewValidation",
          "when": "resourceDirname=~/.logs/export && resourceFilename=~/exportValidation.json/",
          "group": "navigation@1"
        },
        {
          "command": "logicAppsExtension.switchDebugMode",
          "when": "explorerResourceIsRoot == true",
          "group": "zzz_LogicApptools@2"
        },
        {
          "command": "logicAppsExtension.useSQLStorage",
          "when": "explorerResourceIsRoot == true",
          "group": "zzz_LogicApptools@3"
        },
        {
          "command": "logicAppsExtension.configureWebhookRedirectEndpoint",
          "when": "resourceFilename==local.settings.json",
          "group": "zzz_appSettings@3"
        },
        {
          "command": "logicAppsExtension.enableAzureConnectors",
          "when": "resourceFilename==workflow.json",
          "group": "navigation@2"
        }
      ],
      "commandPalette": [
        {
          "command": "logicAppsExtension.selectSubscriptions",
          "when": "never"
        },
        {
          "command": "logicAppsExtension.openDesigner",
          "when": "resourceFilename==workflow.json"
        },
        {
          "command": "logicAppsExtension.loadMore",
          "when": "never"
        },
        {
          "command": "logicAppsExtension.viewContent",
          "when": "never"
        },
        {
          "command": "logicAppsExtension.pickProcess",
          "when": "never"
        },
        {
          "command": "logicAppsExtension.refresh",
          "when": "never"
        },
        {
          "command": "logicAppsExtension.openOverview",
          "when": "resourceFilename==workflow.json"
        },
        {
          "command": "logicAppsExtension.toggleAppSettingVisibility",
          "when": "never"
        }
      ]
    },
    "configuration": [
      {
        "title": "Azure New Logic Apps (Standard)",
        "properties": {
          "logicAppsExtension.showExplorer": {
            "type": "boolean",
            "default": true,
            "description": "Show or hide the Azure Functions Explorer"
          },
          "logicAppsExtension.projectRuntime": {
            "scope": "resource",
            "type": "string",
            "enum": [
              "~4",
              "~3"
            ],
            "description": "The default version of the Azure Functions runtime to use when performing operations like \"Create New Logic App\".",
            "enumDescriptions": [
              "Azure Functions v4",
              "Azure Functions v3 (.NET Core)"
            ]
          },
          "logicAppsExtension.projectLanguage": {
            "scope": "resource",
            "type": "string",
            "enum": [
              "JavaScript"
            ],
            "readOnly": true,
            "description": "The default language to use when performing operations like \"Create New Workflow\".",
            "enumDescriptions": [
              ""
            ]
          },
          "logicAppsExtension.deploySubpath": {
            "scope": "resource",
            "type": "string",
            "description": "The default subpath of a workspace folder to use when deploying. If set, you will not be prompted for the folder path when deploying."
          },
          "logicAppsExtension.pickProcessTimeout": {
            "type": "integer",
            "description": "The timeout (in seconds) to be used when searching for the Azure Functions host process. Since a build is required every time you F5, you may need to adjust this based on how long your build takes.",
            "default": 60
          },
          "logicAppsExtension.stopFuncTaskPostDebug": {
            "type": "boolean",
            "description": "Automatically stop the task running the Azure Functions host when a debug sessions ends.",
            "default": true
          },
          "logicAppsExtension.validateFuncCoreTools": {
            "type": "boolean",
            "description": "Validate the Azure Functions Core Tools is installed before debugging.",
            "default": true
          },
          "logicAppsExtension.showDeployConfirmation": {
            "type": "boolean",
            "description": "Ask for confirmation before deploying to a Function App in Azure (deploying will overwrite any previous deployment and cannot be undone).",
            "default": true
          },
          "logicAppsExtension.showCoreToolsWarning": {
            "type": "boolean",
            "description": "Show a warning if your installed version of Azure Functions Core Tools is out-of-date.",
            "default": true
          },
          "logicAppsExtension.showMultiCoreToolsWarning": {
            "type": "boolean",
            "description": "Show a warning if multiple installs of Azure Functions Core Tools are detected.",
            "default": true
          },
          "logicAppsExtension.requestTimeout": {
            "type": "number",
            "description": "The timeout (in seconds) to be used when making requests, for example getting the latest templates.",
            "default": 15
          }
        }
      }
    ]
  },
  "extensionDependencies": [
    "ms-vscode.azure-account",
    "ms-azuretools.vscode-azurefunctions"
  ],
  "activationEvents": [
    "onCommand:logicAppsExtension.openDesigner",
    "onCommand:logicAppsExtension.loadMore",
    "onCommand:logicAppsExtension.viewContent",
    "onCommand:logicAppsExtension.createNewProject",
    "onCommand:logicAppsExtension.createCodeless",
    "onCommand:logicAppsExtension.deploy",
    "onCommand:logicAppsExtension.deploySlot",
    "onCommand:logicAppsExtension.createLogicApp",
    "onCommand:logicAppsExtension.createLogicAppAdvanced",
    "onCommand:logicAppsExtension.startLogicApp",
    "onCommand:logicAppsExtension.stopLogicApp",
    "onCommand:logicAppsExtension.restartLogicApp",
    "onCommand:logicAppsExtension.pickProcess",
    "onCommand:logicAppsExtension.deleteLogicApp",
    "onCommand:logicAppsExtension.openOverview",
    "onCommand:logicAppsExtension.refresh",
    "onCommand:logicAppsExtension.exportLogicApp",
    "onCommand:logicAppsExtension.reviewValidation",
    "onCommand:logicAppsExtension.switchToDotnetProject",
    "onCommand:logicAppsExtension.openInPortal",
    "onCommand:logicAppsExtension.redeploy",
    "onCommand:logicAppsExtension.browseWebsite",
    "onCommand:logicAppsExtension.viewProperties",
    "onCommand:logicAppsExtension.createSlot",
    "onCommand:logicAppsExtension.deleteSlot",
    "onCommand:logicAppsExtension.startStreamingLogs",
    "onCommand:logicAppsExtension.stopStreamingLogs",
    "onCommand:logicAppsExtension.viewDeploymentLogs",
    "onCommand:logicAppsExtension.swapSlot",
    "onCommand:logicAppsExtension.switchDebugMode",
    "onCommand:logicAppsExtension.appSettings.add",
    "onCommand:logicAppsExtension.appSettings.delete",
    "onCommand:logicAppsExtension.appSettings.download",
    "onCommand:logicAppsExtension.appSettings.edit",
    "onCommand:logicAppsExtension.appSettings.rename",
    "onCommand:logicAppsExtension.appSettings.toggleSlotSetting",
    "onCommand:logicAppsExtension.appSettings.upload",
    "onCommand:logicAppsExtension.useSQLStorage",
    "onView:newAzLogicApps",
    "workspaceContains:host.json",
    "workspaceContains:*/host.json",
    "onDebugInitialConfigurations"
  ],
  "galleryBanner": {
    "color": "#015cda",
    "theme": "dark"
  },
  "bugs": {
    "url": "https://github.com/Azure/logicapps/issues"
  },
  "homepage": "https://azure.microsoft.com/services/logic-apps/",
  "license": "SEE LICENSE IN LICENSE.md",
  "categories": [
    "Azure"
  ],
  "keywords": [
    "Azure",
    "Logic App",
    "serverless",
    "multi-root ready"
  ],
  "preview": false,
  "publisher": "ms-azuretools",
  "icon": "assets/logicapp.png",
  "dependencies": {
    "tslib": "^2.0.0"
  }
}
