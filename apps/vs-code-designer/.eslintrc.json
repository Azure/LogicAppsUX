{
  "extends": ["../../.eslintrc.json"],
  "ignorePatterns": ["!**/*", "**/node_modules/**", "**/build/**", "**/__test__/**", "**/__tests__/**", "**/dist/**", "**/__mocks__/**"],
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "."
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        // Enhanced TypeScript rules (for type-aware linting)
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/prefer-as-const": "error",
        
        // Naming conventions for VS Code extensions
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "prefix": ["I"]
          },
          {
            "selector": "typeAlias",
            "format": ["PascalCase"]
          },
          {
            "selector": "enum",
            "format": ["PascalCase"]
          },
          {
            "selector": "class",
            "format": ["PascalCase"]
          },
          {
            "selector": "method",
            "format": ["camelCase"]
          },
          {
            "selector": "function",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          }
        ],
        
        // Import/Export standards
        "no-restricted-imports": [
          "error",
          {
            "patterns": [
              {
                "group": ["vscode"],
                "message": "Use 'import * as vscode from \"vscode\"' or specific imports instead"
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": "./tsconfig.json",
        "tsconfigRootDir": "."
      },
      "rules": {
        "react-hooks/rules-of-hooks": "off",
        // Additional TypeScript-specific rules with type information
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-non-null-assertion": "warn"
      }
    },
    {
      "files": ["*.test.ts", "*.spec.ts", "**/__test__/**", "**/__tests__/**", "**/__mocks__/**"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-misused-promises": "off"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {}
    }
  ]
}
